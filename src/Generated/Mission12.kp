#line 1 "C:\\Users\\Coldboy\\ClionProjects\\homeworld_cmake\\src\\SinglePlayer\\Mission12.kas"



#line 1 "C:\\Users\\Coldboy\\ClionProjects\\homeworld_cmake\\src\\SinglePlayer\\..\\\\Game\\\\speechevent.h"






















































































































































































































































































































































































































































































































							




































































































































































													
													

													
													































































































































































































































												




































































































































































































































































#line 5 "C:\\Users\\Coldboy\\ClionProjects\\homeworld_cmake\\src\\SinglePlayer\\Mission12.kas"
#line 1 "C:\\Users\\Coldboy\\ClionProjects\\homeworld_cmake\\src\\SinglePlayer\\..\\\\Game\\\\soundmusic.h"













































































#line 6 "C:\\Users\\Coldboy\\ClionProjects\\homeworld_cmake\\src\\SinglePlayer\\Mission12.kas"


    LOCALIZATION 

            LSTRING_Savegame
                "12 - Galactic Core"
                "12 - Noyau Galactique"
                "12 - Galaktischer Kern"
                "12 - El centro de la galaxia"
				"12 - Il cuore della galassia"

            LSTRING_LocationCard
                "GALACTIC CORE"
                "NOYAU GALACTIQUE"
                "GALAKTISCHER KERN"
                "EL CENTRO DE LA GALAXIA"
				"IL CUORE DELLA GALASSIA"

            LSTRING_FICaughtInFieldTASKBAR
                "Destroy source of gravity field"
                "Destruction de la source du champ de gravitT"
                "Quelle des Gravitationsfeldes vernichten."
                "Destruir la fuente del campo gravitatorio"
				"Distruggi la fonte del campo gravitazionale"

            LSTRING_FIUnderAttackTASKBAR
                "Protect the Fleet"
                "Protection de la Flotte"
                "Die Flotte schntzen."
                "Proteger la flota"
				"Progetta la flotta"

            LSTRING_FIHelpDefectorTASKBAR
                "Protect the Defector"
                "Protection du Transfuge"
                "Den _berlSufer schntzen."
                "Proteger el deflector"
				"Proteggi il Defector"

            LSTRING_Hyperspace
                "                      HYPERSPACE"
                "                      HYPERESPACE"
                "           HYPERRAUMSPRUNG"
                "                    HIPERESPACIO"
				"					IPERSPAZIO"

    ENDL 








FSM FleetIntel
        States FCIntro,

               FICaughtInField,

               FIUnderAttack,

               FIMissileTechReady,

               FINewFighterTech,

               FocusOnDefector,

               DefectorHelpMe, DefectorHelpMe2,

               FIHelpDefector,

               FIDefectorOnBoard,

               FIIdle;

        INIT
                Jump FIIdle;                                        
        ENDINIT
        WATCH
        ENDWATCH


        STATE FCIntro 
            INIT
                    SpeechEvent ((653 + 2048 + 268435456), 0);        
                    VarCreateSet ("G_GoGravWells", TRUE);
                    
                    
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            Jump FICaughtInField;
                    ENDIF
            ENDWATCH
        ENDSTATE FCIntro 









        STATE FICaughtInField 
            INIT
                    SpeechEvent ((654 + 4096 + 268435456), 0);                  
                    
                    
                    MusicPlay (15);
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            IFONCE (TRUE)
                                    VarCreateSet ("G_FleetIntelIntroHasPlayed", TRUE);
                            ENDIFONCE
                            VarDestroy ("G_CLICK_DestroyField");
                            Jump FIIdle;
                    ENDIF
            ENDWATCH
        ENDSTATE FICaughtInField 










        STATE FIUnderAttack 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FIPlayerShips, 3000);                 
                    ShipsSelectClass (SHIPS_FIPlayerFighters, SHIPS_FIPlayerShips, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_FIPlayerCorvettes, SHIPS_FIPlayerShips, "CLASS_Corvette");
                    ShipsAdd (SHIPS_FIPlayerStrikeCraft, SHIPS_FIPlayerFighters);
                    ShipsAdd (SHIPS_FIPlayerStrikeCraft, SHIPS_FIPlayerCorvettes);
                    IF (ShipsCount (SHIPS_FIPlayerStrikeCraft) > 0)             
                            IF (RaceOfHuman () = 0)
                                    SpeechEvent ((658 + 4096 + 268435456), 0);                   
                            ELSEIF (RaceOfHuman () = 1)
                                    SpeechEvent ((659 + 4096 + 268435456), 0);                  
                            ENDIF
                    ELSE                                                        
                            IF (RaceOfHuman () = 0)
                                    SpeechEvent ((753 + 4096 + 268435456), 0);                   
                            ELSEIF (RaceOfHuman () = 1)
                                    SpeechEvent ((754 + 4096 + 268435456), 0);                  
                            ENDIF
                    ENDIF
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            IFONCE (TRUE)
                                    VarCreateSet ("G_UnderAttackHasPlayed", TRUE);
                            ENDIFONCE
                            VarDestroy ("G_CLICK_ProtectFleet");
                            Jump FIIdle;
                    ENDIF
            ENDWATCH
        ENDSTATE FIUnderAttack 











        STATE FIMissileTechReady 
            INIT
                    SpeechEvent ((655 + 4096 + 268435456), 0);
                    
                    
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            TechSetResearch ("MissileWeapons");
                            Jump FIIdle;
                    ENDIF
            ENDWATCH
        ENDSTATE FIMissileTechReady 













        STATE FINewFighterTech 
            INIT
                    
                    IF (RaceOfHuman () = 0)
                            
                            SpeechEvent ((656 + 4096 + 268435456), 0);             
                    ELSEIF (RaceOfHuman () = 1)
                            
                            SpeechEvent ((657 + 4096 + 268435456), 0);              
                    ENDIF
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            TechSetResearch ("CloakDefenseFighter");
                            Jump FIIdle;
                    ENDIF
            ENDWATCH
        ENDSTATE FINewFighterTech 







        STATE FocusOnDefector 
            INIT
                    wideScreenIn (90);                              
                    TimerCreateSetStart ("DefectorWideScreen", 4);  
            ENDINIT
            WATCH
                    IF (TimerExpiredDestroy ("DefectorWideScreen"))
                            
                            SoundEvent(262);
                            TutCameraFocus(TEAMSHIPS_Defector);
                            TutCameraFocus(TEAMSHIPS_Defector);
                            VarCreateSet ("G_MakeDefectorAnAlly", TRUE);
                            
                            ShipsSetNonRetaliation (TEAMSHIPS_Defector);
                            VarCreateSet ("G_DefectorHasSwitchedSides", TRUE);
                            Jump DefectorHelpMe;
                    ENDIF
            ENDWATCH
        ENDSTATE FocusOnDefector 








        STATE DefectorHelpMe 
            INIT
                    
                    TimerCreateSetStart ("G_StayFocusedOnDefector", 6);
                    IF (RaceOfHuman () = 0)
                            
                            SpeechEvent ((660 + 262144 + 268435456), 0);                  
                    ELSEIF (RaceOfHuman () = 1)
                            
                            SpeechEvent ((661 + 262144 + 268435456), 0);                 
                    ENDIF
                    TutResetGameMessageQueue();
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            
                            
                            
                            
                            
                            Jump DefectorHelpMe2;
                    ENDIF

                    
                    IF (TutGameSentMessage ("Game_BandBoxFocus,Game_ClickFocus,KB_FocusMothership,KB_CancelFocus,KB_Focus,KB_Sensors,TB_SensorsManager"))
                            IF (VarGet ("PlayerChangedFocus") = FALSE)
                                    WideScreenOut (60);
                                    VarCreateSet ("PlayerChangedFocus", TRUE);
                            ENDIF
                    ENDIF

            ENDWATCH
        ENDSTATE DefectorHelpMe 

        STATE DefectorHelpMe2 
            INIT
                    TimerCreateSetStart ("G_GoBackToPreviousFocus", 1);
                    TimerCreateSetStart ("G_StartUnLetterbox", 2);
                    TimerCreateSetStart ("G_WaitForLBXOutToFinish", 4);
            ENDINIT
            WATCH
                    IF (TimerExpiredDestroy ("G_GoBackToPreviousFocus"))
                            IF (VarGet ("PlayerChangedFocus") = FALSE)
                                    SoundEvent(262);
                                    TutCameraFocusCancel();
                            ENDIF
                    ENDIF

                    IF (TimerExpiredDestroy ("G_StartUnLetterbox"))
                            IF (VarGet ("PlayerChangedFocus") = FALSE)
                                    WideScreenOut (60);
                                    VarCreateSet ("PlayerChangedFocus", TRUE);
                            ENDIF
                    ENDIF

                    IF (TimerExpiredDestroy ("G_WaitForLBXOutToFinish"))
                            Jump FIHelpDefector;
                    ENDIF
            ENDWATCH
        ENDSTATE DefectorHelpMe2 









        STATE FIHelpDefector 
            INIT
                    SpeechEvent ((662 + 4096 + 268435456), 0);                      
                    
                    
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            IFONCE (TRUE)
                                    VarCreateSet ("G_ProtectDefectorHasPlayed", TRUE);
                                    PingAddShips (TEAMSHIPS_Defector, "DefectorPing");
                            ENDIFONCE
                            
                            VarDestroy ("G_CLICK_ProtectDefector");
                            Jump FIIdle;
                    ENDIF
            ENDWATCH
        ENDSTATE FIHelpDefector 











        STATE FIDefectorOnBoard 
            INIT
                    SpeechEvent ((663 + 4096 + 268435456), 0);                    
                    
                    
            ENDINIT
            WATCH
                    IF (IntelEventEnded ())
                            IFONCE (TRUE)
                                    VarCreateSet ("G_DefectorIsOnBoard", TRUE);
                            ENDIFONCE
                            Jump FIIdle;
                    ENDIF
            ENDWATCH
        ENDSTATE FIDefectorOnBoard 











        STATE FIIdle 
            INIT
            ENDINIT
            WATCH
                    

                    
                    IFONCE (TimerExpiredDestroy ("G_FCHyperspaceSuccessful"))
                            Jump FCIntro;
                    ENDIFONCE

                    
                    IFONCE (TimerExpiredDestroy ("G_UnderAttackTimer"))
                            Jump FIUnderAttack;
                    ENDIFONCE

                    
                    
                    IFONCE (TimerExpiredDestroy ("G_PlayMissileTech"))
                            Jump FIMissileTechReady;
                    ENDIFONCE

                    
                    IFONCE (TimerExpiredDestroy ("G_TechnologyTimer"))
                            Jump FINewFighterTech;
                    ENDIFONCE

                    
                    IFONCE (TimerExpired ("G_FocusOnDefectorNow"))
                            Jump FocusOnDefector;
                    ENDIFONCE

                    
                    IFONCE (TimerExpired ("G_AllObjectivesComplete"))
                            Jump FIDefectorOnBoard;
                    ENDIFONCE






                    

                    
                    IF (VarGet ("G_CLICK_DestroyField"))
                            Jump FICaughtInField;
                    ENDIF

                    
                    IF (VarGet ("G_CLICK_ProtectFleet"))
                            Jump FIUnderAttack;
                    ENDIF

                    
                    IF (VarGet ("G_CLICK_ProtectDefector"))
                            Jump FIHelpDefector;
                    ENDIF

            ENDWATCH
        ENDSTATE FIIdle 


ENDFSM FleetIntel












FSM TestTeam
    States Hide;

    INIT
            Jump Hide;
    ENDINIT
    WATCH
    ENDWATCH

        STATE Hide 
            INIT
                    HideShips (TEAMSHIPS_TestTeam);
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE Hide 


ENDFSM TestTeam

















FSM GravWells
    States Wait, Wait2, Move, GravityOn, GravityOff;

    INIT
            
            
            Jump Wait;
    ENDINIT
    WATCH
    ENDWATCH

        STATE Move 
            INIT
                    IF (ThisTeamIs (TEAM_GravwellTeam1))
                            MoveTo(POINT_GravwellMoveToPoint1);
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam2))
                            MoveTo(POINT_GravwellMoveToPoint2);
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam3))
                            MoveTo(POINT_GravwellMoveToPoint3);
                    ENDIF
            ENDINIT
            WATCH
                    IF (ThisTeamIs (TEAM_GravwellTeam1))
                            IF (Nearby (POINT_GravwellMoveToPoint1, 500))
                                    Jump GravityOn;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam2))
                            IF (Nearby (POINT_GravwellMoveToPoint2, 500))
                                    Jump GravityOn;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam3))
                            IF (Nearby (POINT_GravwellMoveToPoint3, 500))
                                    Jump GravityOn;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Move 


        STATE Wait 
            INIT
            ENDINIT
            WATCH
                    IF (VarGet ("G_GoGravWells") = TRUE)
                            Jump Wait2;
                    ENDIF
            ENDWATCH
        ENDSTATE Wait 


        STATE Wait2 
            INIT
            ENDINIT
            WATCH
                    
                    
                    

                    IF (ThisTeamIs (TEAM_GravwellTeam1))
                            FindEnemiesNearTeam (SHIPS_GravWell1EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell1Fighters, SHIPS_GravWell1EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell1Corvettes, SHIPS_GravWell1EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell1StrikeCraft, SHIPS_GravWell1Fighters);
                            ShipsAdd (SHIPS_GravWell1StrikeCraft, SHIPS_GravWell1Corvettes);
                            IF (ShipsCount (SHIPS_GravWell1StrikeCraft) > 0)
                                    MoveTo (SHIPSPOINT_GravWell1StrikeCraft);
                                    
                                    Jump GravityOn;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam2))
                            FindEnemiesNearTeam (SHIPS_GravWell2EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell2Fighters, SHIPS_GravWell2EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell2Corvettes, SHIPS_GravWell2EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell2StrikeCraft, SHIPS_GravWell2Fighters);
                            ShipsAdd (SHIPS_GravWell2StrikeCraft, SHIPS_GravWell2Corvettes);
                            IF (ShipsCount (SHIPS_GravWell2StrikeCraft) > 0)
                                    MoveTo (SHIPSPOINT_GravWell2StrikeCraft);
                                    
                                    Jump GravityOn;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam3))
                            FindEnemiesNearTeam (SHIPS_GravWell3EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell3Fighters, SHIPS_GravWell3EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell3Corvettes, SHIPS_GravWell3EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell3StrikeCraft, SHIPS_GravWell3Fighters);
                            ShipsAdd (SHIPS_GravWell3StrikeCraft, SHIPS_GravWell3Corvettes);
                            IF (ShipsCount (SHIPS_GravWell3StrikeCraft) > 0)
                                    MoveTo (SHIPSPOINT_GravWell3StrikeCraft);
                                    
                                    Jump GravityOn;
                            ENDIF
                    ENDIF

            ENDWATCH
        ENDSTATE Wait2 


        STATE GravityOn 
            INIT
                    SpecialToggle();                                

                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  

            ENDINIT
            WATCH
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    

                    
                    IF (ThisTeamIs (TEAM_GravwellTeam1))
                            FindEnemiesNearTeam (SHIPS_GravWell1EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell1Fighters, SHIPS_GravWell1EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell1Corvettes, SHIPS_GravWell1EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell1StrikeCraft, SHIPS_GravWell1Fighters);
                            ShipsAdd (SHIPS_GravWell1StrikeCraft, SHIPS_GravWell1Corvettes);
                            IF (ShipsCount (SHIPS_GravWell1StrikeCraft) = 0)
                                    Jump GravityOff;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam2))
                            FindEnemiesNearTeam (SHIPS_GravWell2EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell2Fighters, SHIPS_GravWell2EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell2Corvettes, SHIPS_GravWell2EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell2StrikeCraft, SHIPS_GravWell2Fighters);
                            ShipsAdd (SHIPS_GravWell2StrikeCraft, SHIPS_GravWell2Corvettes);
                            IF (ShipsCount (SHIPS_GravWell2StrikeCraft) = 0)
                                    Jump GravityOff;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam3))
                            FindEnemiesNearTeam (SHIPS_GravWell3EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell3Fighters, SHIPS_GravWell3EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell3Corvettes, SHIPS_GravWell3EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell3StrikeCraft, SHIPS_GravWell3Fighters);
                            ShipsAdd (SHIPS_GravWell3StrikeCraft, SHIPS_GravWell3Corvettes);
                            IF (ShipsCount (SHIPS_GravWell3StrikeCraft) = 0)
                                    Jump GravityOff;
                            ENDIF
                    ENDIF

            ENDWATCH
        ENDSTATE GravityOn 


        STATE GravityOff 
            INIT
                    SpecialToggle();                                
            ENDINIT
            WATCH
                    IF (ThisTeamIs (TEAM_GravwellTeam1))
                            FindEnemiesNearTeam (SHIPS_GravWell1EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell1Fighters, SHIPS_GravWell1EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell1Corvettes, SHIPS_GravWell1EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell1StrikeCraft, SHIPS_GravWell1Fighters);
                            ShipsAdd (SHIPS_GravWell1StrikeCraft, SHIPS_GravWell1Corvettes);
                            IF (ShipsCount (SHIPS_GravWell1StrikeCraft) > 0)
                                    MoveTo (SHIPSPOINT_GravWell1StrikeCraft);
                                    Jump GravityOn;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam2))
                            FindEnemiesNearTeam (SHIPS_GravWell2EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell2Fighters, SHIPS_GravWell2EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell2Corvettes, SHIPS_GravWell2EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell2StrikeCraft, SHIPS_GravWell2Fighters);
                            ShipsAdd (SHIPS_GravWell2StrikeCraft, SHIPS_GravWell2Corvettes);
                            IF (ShipsCount (SHIPS_GravWell2StrikeCraft) > 0)
                                    MoveTo (SHIPSPOINT_GravWell2StrikeCraft);
                                    Jump GravityOn;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GravwellTeam3))
                            FindEnemiesNearTeam (SHIPS_GravWell3EVERYONE, 16000);
                            
                            ShipsSelectClass (SHIPS_GravWell3Fighters, SHIPS_GravWell3EVERYONE, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GravWell3Corvettes, SHIPS_GravWell3EVERYONE, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GravWell3StrikeCraft, SHIPS_GravWell3Fighters);
                            ShipsAdd (SHIPS_GravWell3StrikeCraft, SHIPS_GravWell3Corvettes);
                            IF (ShipsCount (SHIPS_GravWell3StrikeCraft) > 0)
                                    MoveTo (SHIPSPOINT_GravWell3StrikeCraft);
                                    Jump GravityOn;
                            ENDIF
                    ENDIF

            ENDWATCH
        ENDSTATE GravityOff 


ENDFSM GravWells








FSM GravWellSupport
    States Choose, ServiceGravWell, ServiceCarrier, ServiceCruiser, GiveToAI;

    INIT
            Jump Choose;
    ENDINIT
    WATCH
    ENDWATCH

        STATE Choose 
            INIT
                    IF (ThisTeamIs (TEAM_GW1Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam1) > 0)
                                    Jump ServiceGravWell;
                            ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    Jump ServiceCarrier;
                            ELSEIF (ShipsCount (TEAMSHIPS_Cruiser) > 0)
                                    Jump ServiceCruiser;
                            ELSE
                                    Jump GiveToAI;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GW2Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam2) > 0)
                                    Jump ServiceGravWell;
                            ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    Jump ServiceCarrier;
                            ELSEIF (ShipsCount (TEAMSHIPS_Cruiser) > 0)
                                    Jump ServiceCruiser;
                            ELSE
                                    Jump GiveToAI;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GW3Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam3) > 0)
                                    Jump ServiceGravWell;
                            ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    Jump ServiceCarrier;
                            ELSEIF (ShipsCount (TEAMSHIPS_Cruiser) > 0)
                                    Jump ServiceCruiser;
                            ELSE
                                    Jump GiveToAI;
                            ENDIF
                    ENDIF
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE Choose 


        STATE ServiceGravWell 
            INIT
                    IF (ThisTeamIs (TEAM_GW1Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam1) > 0)
                                    AttackSpecial (TEAMSHIPS_GravWellTeam1);
                            ELSE
                                    Jump Choose;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GW2Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam2) > 0)
                                    AttackSpecial (TEAMSHIPS_GravWellTeam2);
                            ELSE
                                    Jump Choose;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GW3Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam3) > 0)
                                    AttackSpecial (TEAMSHIPS_GravWellTeam3);
                            ELSE
                                    Jump Choose;
                            ENDIF
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ThisTeamIs (TEAM_GW1Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam1) = 0)
                                    Jump Choose;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GW2Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam2) = 0)
                                    Jump Choose;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GW3Support))
                            IF (ShipsCount (TEAMSHIPS_GravWellTeam3) = 0)
                                    Jump Choose;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE ServiceGravWell 


        STATE ServiceCarrier 
            INIT
                    IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                            AttackSpecial (TEAMSHIPS_Carrier);
                    ELSE
                            Jump Choose;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)
                            Jump Choose;
                    ENDIF
            ENDWATCH
        ENDSTATE ServiceCarrier 


        STATE ServiceCruiser 
            INIT
                    IF (ShipsCount (TEAMSHIPS_Cruiser) > 0)
                            AttackSpecial (TEAMSHIPS_Cruiser);
                    ELSE
                            Jump Choose;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (TEAMSHIPS_Cruiser) = 0)
                            Jump Choose;
                    ENDIF
            ENDWATCH
        ENDSTATE ServiceCruiser 


        STATE GiveToAI 
            INIT
                    TeamGiveToAI ();
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE GiveToAI 


ENDFSM GravWellSupport







FSM GuardGravWells
    States Move, AttackFleet, AttackMothership, NullState;

    INIT
            Jump Move;
    ENDINIT
    WATCH
    ENDWATCH

        STATE Move 
            INIT
                    
                    
                    
                    
                    
                    
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (ThisTeamIs (TEAM_GuardGWTeam1))
                            
                                    
                                    Jump AttackFleet;
                            
                    ELSEIF (ThisTeamIs (TEAM_GuardGWTeam2))
                            
                                    
                                    Jump AttackFleet;
                            
                    ELSEIF (ThisTeamIs (TEAM_GuardGWTeam3))
                            
                                    
                                    Jump AttackFleet;
                            
                    ENDIF
            ENDWATCH
        ENDSTATE Move 


        STATE AttackFleet 
            INIT

                    IF (ThisTeamIs (TEAM_GuardGWTeam1))                                                         
                            
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_GW1EntireFleet, 3000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_GW1EntireFleet, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_GW1EntireFleet, SHIPS_Mothership);                                

                            
                            ShipsSelectClass (SHIPS_GW1Fighters, SHIPS_GW1EntireFleet, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GW1Corvettes, SHIPS_GW1EntireFleet, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GW1StrikeCraft, SHIPS_GW1Fighters);
                            ShipsAdd (SHIPS_GW1StrikeCraft, SHIPS_GW1Corvettes);

                            
                            ShipsSelectClass (SHIPS_GW1Frigates, SHIPS_GW1EntireFleet, "CLASS_Frigate");
                            ShipsSelectClass (SHIPS_GW1Destroyers, SHIPS_GW1EntireFleet, "CLASS_Destroyer");
                            ShipsAdd (SHIPS_GW1Capital, SHIPS_GW1Frigates);
                            ShipsAdd (SHIPS_GW1Capital, SHIPS_GW1Destroyers);

                            IF (ShipsCount (SHIPS_GW1StrikeCraft) > 0)
                                    Attack (SHIPS_GW1StrikeCraft);
                                    VarCreateSet ("AttackingStrikeCraft", TRUE);
                            ELSEIF (ShipsCount (SHIPS_GW1Capital) > 0)
                                    Attack (SHIPS_GW1Capital);
                                    VarCreateSet ("AttackingCapital", TRUE);
                            ELSE
                                    Jump AttackMothership;
                            ENDIF
                    ELSEIF ( (ThisTeamIs (TEAM_GuardGWTeam2)) OR (ThisTeamIs (TEAM_GuardGWTeam3)) )             
                            
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_GW2EntireFleet, 3000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_GW2EntireFleet, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_GW2EntireFleet, SHIPS_Mothership);                                

                            
                            ShipsSelectClass (SHIPS_GW2Fighters, SHIPS_GW2EntireFleet, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_GW2Corvettes, SHIPS_GW2EntireFleet, "CLASS_Corvette");
                            ShipsAdd (SHIPS_GW2StrikeCraft, SHIPS_GW2Fighters);
                            ShipsAdd (SHIPS_GW2StrikeCraft, SHIPS_GW2Corvettes);

                            
                            ShipsSelectClass (SHIPS_GW2Frigates, SHIPS_GW2EntireFleet, "CLASS_Frigate");
                            ShipsSelectClass (SHIPS_GW2Destroyers, SHIPS_GW2EntireFleet, "CLASS_Destroyer");
                            ShipsAdd (SHIPS_GW2Capital, SHIPS_GW2Frigates);
                            ShipsAdd (SHIPS_GW2Capital, SHIPS_GW2Destroyers);

                            IF (ShipsCount (SHIPS_GW2Capital) > 0)
                                    Attack (SHIPS_GW2Capital);
                                    VarCreateSet ("AttackingCapital", TRUE);
                            ELSEIF (ShipsCount (SHIPS_GW2StrikeCraft) > 0)
                                    Attack (SHIPS_GW2StrikeCraft);
                                    VarCreateSet ("AttackingStrikeCraft", TRUE);
                            ELSE
                                    Jump AttackMothership;
                            ENDIF
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (ThisTeamIs (TEAM_GuardGWTeam1))                                                         
                            IF (VarGet ("AttackingStrikeCraft") = TRUE)
                                    IF (ShipsCount (SHIPS_GW1StrikeCraft) = 0)
                                            VarDestroy ("AttackingStrikeCraft");
                                            Jump AttackFleet;
                                    ENDIF
                            ELSEIF (VarGet ("AttackingCapital") = TRUE)
                                    IF (ShipsCount (SHIPS_GW1Capital) = 0)
                                            VarDestroy ("AttackingCapital");
                                            Jump AttackFleet;
                                    ENDIF
                            ENDIF
                    ELSEIF ( (ThisTeamIs (TEAM_GuardGWTeam2)) OR (ThisTeamIs (TEAM_GuardGWTeam3)) )             
                            IF (VarGet ("AttackingStrikeCraft") = TRUE)
                                    IF (ShipsCount (SHIPS_GW2StrikeCraft) = 0)
                                            VarDestroy ("AttackingStrikeCraft");
                                            Jump AttackFleet;
                                    ENDIF
                            ELSEIF (VarGet ("AttackingCapital") = TRUE)
                                    IF (ShipsCount (SHIPS_GW2Capital) = 0)
                                            VarDestroy ("AttackingCapital");
                                            Jump AttackFleet;
                                    ENDIF
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleet 


        STATE AttackMothership 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_EntireFleet, 3000);
                    ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_EntireFleet, "CLASS_Mothership");
                    VarCreateSet ("G_THISISTHEMOTHERSHIP", ShipsCount (SHIPS_PlayerMothership));
                    MoveAttack (SHIPS_PlayerMothership);
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_EntireFleet, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_EntireFleet, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_EntireFleet, SHIPS_Mothership);                                
                    ShipsSelectCapital (SHIPS_Capital, SHIPS_EntireFleet);
                    ShipsSelectClass (SHIPS_GWFighters, SHIPS_EntireFleet, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_GWCorvettes, SHIPS_EntireFleet, "CLASS_Corvette");
                    ShipsAdd (SHIPS_StrikeCraft, SHIPS_GWFighters);
                    ShipsAdd (SHIPS_StrikeCraft, SHIPS_GWCorvettes);

                    ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_Capital, "CLASS_Mothership");
                    ShipsSelectClass (SHIPS_Resource, SHIPS_Capital, "CLASS_Resource");
                    ShipsRemove (SHIPS_Capital, SHIPS_PlayerMothership);
                    ShipsRemove (SHIPS_Capital, SHIPS_Resource);

                    IF (ShipsCount (SHIPS_Capital) > 0)
                            Jump AttackFleet;
                    ELSEIF (ShipsCount (SHIPS_StrikeCraft) > 0)
                            Jump AttackFleet;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackMothership 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM GuardGravWells








FSM AIShips
    States GiveToAI;

    INIT
            Jump GiveToAI;
    ENDINIT
    WATCH
    ENDWATCH

        STATE GiveToAI 
            INIT
                    TeamGiveToAI ();
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE GiveToAI 


ENDFSM AIShips









FSM Carrier
    States ACT1Patrol, NullState;

    INIT
            Jump ACT1Patrol;
    ENDINIT
    WATCH
    ENDWATCH

        STATE ACT1Patrol 
            INIT
                    PatrolPath (PATH_CarrierPath);
            ENDINIT
            WATCH
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)
                            Jump NullState;
                    ENDIF
                    IF (UnderAttack (SHIPS_CarrierAttackedACT1))
                            
                    ENDIF
                    IFONCE (TeamHealthAverage () < 75)
                            VarCreateSet ("G_CarrierLowOnHealth", TRUE);
                    ENDIFONCE
            ENDWATCH
        ENDSTATE ACT1Patrol 

        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 


ENDFSM Carrier









FSM GuardCarrier
    States Guard, AllDeadWaitForShips, WaitToDockWithAICarrier, GuardCruiser, Kamikaze, Dock, Launch, NullState;

    INIT
            VarCreateSet ("SHIPSOriginal", (ShipsCount (THISTEAMSHIPS)));
            VarCreateSet ("SHIPSRequested", 0);
            VarCreateSet ("SHIPSNeeded", 0);
            VarCreateSet ("SHIPSNewships", 0);
            VarCreateSet ("SHIPSKilled", 0);

            Jump Guard;
    ENDINIT
    WATCH
            
            IF ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("WaitingForShips") = FALSE) )
                    Jump AllDeadWaitForShips;
            ENDIF

            
            IF ((ShipsCount (THISTEAMSHIPS) + VarGet ("SHIPSRequested")) < VarGet ("SHIPSOriginal"))
                    VarSet ("SHIPSNeeded", (VarGet ("SHIPSOriginal") - (ShipsCount (THISTEAMSHIPS) + VarGet("SHIPSRequested"))));
                    IF (ThisTeamIs (TEAM_GuardCarrierIon))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RequestShips ("IonCannonFrigate", VarGet ("SHIPSNeeded"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierCorv))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RequestShips ("HeavyCorvette", VarGet ("SHIPSNeeded"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierDef))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RequestShips ("HeavyDefender", VarGet ("SHIPSNeeded"));
                            ENDIF
                    ENDIF
                    VarSet ("SHIPSKilled", VarGet ("SHIPSKilled") + VarGet ("SHIPSNeeded"));
                    VarSet("SHIPSRequested", VarGet("SHIPSRequested") + VarGet("SHIPSNeeded"));
            ENDIF
            VarSet ("SHIPSNewships", NewShipsAdded());
            IF (VarGet("SHIPSNewships"))
                    VarSet("SHIPSRequested", VarGet("SHIPSRequested") - VarGet("SHIPSNewships"));
            ENDIF
    ENDWATCH


        STATE Guard 
            INIT
                    IF (ThisTeamIs (TEAM_GuardCarrierIon))
                            FormationWall ();
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierCorv))
                            FormationDelta ();
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierDef))
                            FormationSphere ();
                    ENDIF
                    Guard (TEAMSHIPS_Carrier);
            ENDINIT
            WATCH
                    
                    IF ( (ThisTeamIs (TEAM_GuardCarrierCorv)) OR (ThisTeamIs (TEAM_GuardCarrierDef)) )
                            IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                                    
                                    Jump Dock;
                            ENDIF
                    ENDIF

                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)                     
                            IF (ShipsCount (TEAMSHIPS_Cruiser) > 0)
                                    Jump GuardCruiser;
                            ELSE
                                    IF ( (ThisTeamIs (TEAM_GuardCarrierCorv)) OR (ThisTeamIs (TEAM_GuardCarrierDef)) )
                                            Jump Kamikaze;                              
                                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierIon))          
                                            TeamHyperspaceOut ();
                                            Jump NullState;
                                    ENDIF
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Guard 


        STATE GuardCruiser 
            INIT
                    IF (ThisTeamIs (TEAM_GuardCarrierIon))
                            FormationWall ();
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierCorv))
                            FormationDelta ();
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierDef))
                            FormationSphere ();
                    ENDIF
                    Guard (TEAMSHIPS_Cruiser);
            ENDINIT
            WATCH
                    
                    IF ( (ThisTeamIs (TEAM_GuardCarrierCorv)) OR (ThisTeamIs (TEAM_GuardCarrierDef)) )
                            IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                                    
                                    Jump Dock;
                            ENDIF
                    ENDIF

                    IF (ShipsCount (TEAMSHIPS_Cruiser) = 0)                     
                            IF ( (ThisTeamIs (TEAM_GuardCarrierCorv)) OR (ThisTeamIs (TEAM_GuardCarrierDef)) )
                                    Jump Kamikaze;                              
                            ELSEIF (ThisTeamIs (TEAM_GuardCarrierIon))          
                                    TeamHyperspaceOut ();
                                    Jump NullState;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCruiser 


        STATE AllDeadWaitForShips 
            INIT
                    VarCreateSet ("WaitingForShips", TRUE);
            ENDINIT
            WATCH
                    IF (ShipsCount (THISTEAMSHIPS) > 0)
                            VarDestroy ("WaitingForShips");
                            Jump Guard;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)
                            Jump NullState;
                    ENDIF
            ENDWATCH
        ENDSTATE AllDeadWaitForShips 


        STATE Kamikaze 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetNearMothership, 3000);
                    ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_FleetNearMothership, "CLASS_Mothership");
                    Kamikaze (SHIPS_PlayerMothership);
                    Jump NullState;
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE Kamikaze 


        STATE Dock 
            INIT
                    DockStay (TEAM_Carrier);                        
            ENDINIT
            WATCH
                    
                    IF (TeamDockedReadyForLaunch ())                
                            Jump Launch;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            Jump Guard;
                    ENDIF
            ENDWATCH
        ENDSTATE Dock 


        STATE Launch 
            INIT
                    Launch ();                                      
            ENDINIT
            WATCH
                    
                    IF (TeamFinishedLaunching ())                   
                            Jump Guard;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            Jump Guard;
                    ENDIF
            ENDWATCH
        ENDSTATE Launch 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM GuardCarrier












FSM Cruiser
    States Hide, ComeOnIn, AttackNearby, AttackFleet, AttackMothership, NullState;

    INIT
            Jump Hide;
    ENDINIT
    WATCH
            IFONCE (VarGet ("G_ACT2HasBegun") = TRUE)
                    TimerCreateSetStart ("BringInTheBruiser", 250);
            ENDIFONCE
            IFONCE (ShipsCount (THISTEAMSHIPS) = 0)
                    Jump NullState;
            ENDIFONCE
    ENDWATCH

        STATE Hide 
            INIT
                    HideShips (TEAMSHIPS_Cruiser);
            ENDINIT
            WATCH
                    IF ( (ShipsCount (TEAMSHIPS_Carrier) = 0) OR (TimerExpiredDestroy ("BringInTheBruiser")) )
                            UnhideShips (TEAMSHIPS_Cruiser);
                            Jump ComeOnIn;
                    ENDIF
            ENDWATCH
        ENDSTATE Hide 

        STATE ComeOnIn 
            INIT
                    PatrolPath (PATH_CruiserPath);
                    
            ENDINIT
            WATCH
                    IF (FindEnemiesNearTeam (SHIPS_CruiserFound, 16000))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_CruiserFound, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_CruiserFound, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_CruiserFound) > 0)
                                    Stop ();
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    IF (PathNextPoint () = 0)                       
                            
                            Jump AttackFleet;
                    ENDIF
            ENDWATCH
        ENDSTATE ComeOnIn 


        STATE AttackNearby 
            INIT
                    ShipsSelectClass (SHIPS_NearbyDestroyers, SHIPS_CruiserFound, "CLASS_Destroyer");
                    ShipsSelectClass (SHIPS_NearbyFrigates, SHIPS_CruiserFound, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_NearbyCorvettes, SHIPS_CruiserFound, "CLASS_Corvette");
                    IF (ShipsCount (SHIPS_NearbyDestroyers) > 0)        
                            Attack (SHIPS_NearbyDestroyers);
                    ELSEIF (ShipsCount (SHIPS_NearbyFrigates) > 0)      
                            Attack (SHIPS_NearbyFrigates);
                    ELSEIF (ShipsCount (SHIPS_NearbyCorvettes) > 0)     
                            Attack (SHIPS_NearbyCorvettes);
                    ELSE
                            Attack (SHIPS_CruiserFound);                
                    ENDIF
            ENDINIT
            WATCH
                    IF ( (ShipsCount (SHIPS_NearbyDestroyers) = 0) AND ((ShipsCount (SHIPS_NearbyFrigates) > 0) OR (ShipsCount (SHIPS_NearbyCorvettes) > 0)) )
                            Jump AttackNearby;
                    ELSEIF ( (ShipsCount (SHIPS_NearbyFrigates) = 0) AND ((ShipsCount (SHIPS_NearbyDestroyers) > 0) OR (ShipsCount (SHIPS_NearbyCorvettes) > 0)) )
                            Jump AttackNearby;
                    ELSEIF ( (ShipsCount (SHIPS_NearbyCorvettes) = 0) AND ((ShipsCount (SHIPS_NearbyFrigates) > 0) OR (ShipsCount (SHIPS_NearbyDestroyers) > 0)) )
                            Jump AttackNearby;
                    ELSEIF (ShipsCount (SHIPS_CruiserFound) = 0)
                            Jump ComeOnIn;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE AttackFleet 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetNearMothership, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetNearMothership, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_FleetNearMothership, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_FleetDestroyers, SHIPS_FleetNearMothership, "CLASS_Destroyer");
                    ShipsSelectClass (SHIPS_FleetFrigates, SHIPS_FleetNearMothership, "CLASS_Frigate");
                    IF (ShipsCount (SHIPS_FleetDestroyers) > 0)         
                            Attack (SHIPS_FleetDestroyers);
                    ELSEIF (ShipsCount (SHIPS_FleetFrigates) > 0)       
                            Attack (SHIPS_FleetFrigates);
                    ELSE                                                
                            Jump AttackMothership;
                    ENDIF
            ENDINIT
            WATCH
                    IF ( (ShipsCount (SHIPS_FleetDestroyers) = 0) AND (ShipsCount (SHIPS_FleetFrigates) > 0) )      
                            Jump AttackFleet;
                    ELSEIF ( (ShipsCount (SHIPS_FleetFrigates) = 0) AND (ShipsCount (SHIPS_FleetDestroyers) > 0) )  
                            Jump AttackFleet;
                    ENDIF

                    IF ( (ShipsCount (SHIPS_FleetDestroyers) = 0) AND (ShipsCount (SHIPS_FleetFrigates) = 0) )      
                            Jump AttackMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleet 


        STATE AttackMothership 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetNearMothership, 3000);
                    ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_FleetNearMothership, "CLASS_Mothership");
                    MoveAttack (SHIPS_PlayerMothership);
            ENDINIT
            WATCH
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetNearMothership, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetNearMothership, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_FleetNearMothership, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_FleetDestroyers, SHIPS_FleetNearMothership, "CLASS_Destroyer");
                    ShipsSelectClass (SHIPS_FleetFrigates, SHIPS_FleetNearMothership, "CLASS_Frigate");
                    IF ( (ShipsCount (SHIPS_FleetDestroyers) > 0) OR (ShipsCount (SHIPS_FleetFrigates) > 0) )
                            Jump AttackFleet;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackMothership 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM Cruiser







FSM GuardCruiser
    States Hide, Guard, GuardCarrier, Kamikaze, Dock, Launch, NullState;

    INIT
            Jump Hide;
    ENDINIT
    WATCH
            IFONCE (VarGet ("G_ACT2HasBegun") = TRUE)
                    TimerCreateSetStart ("BringInTheBruiser", 150);
            ENDIFONCE
    ENDWATCH

        STATE Hide 
            INIT
                    HideShips (TEAMSHIPS_GuardCruiserDef);
                    HideShips (TEAMSHIPS_GuardCruiserCorv);
                    HideShips (TEAMSHIPS_GuardCruiserIon);
            ENDINIT
            WATCH
                    IF ( (ShipsCount (TEAMSHIPS_Carrier) = 0) OR (TimerExpiredDestroy ("BringInTheBruiser")) )
                            UnHideShips (TEAMSHIPS_GuardCruiserDef);
                            UnHideShips (TEAMSHIPS_GuardCruiserCorv);
                            UnHideShips (TEAMSHIPS_GuardCruiserIon);
                            Jump Guard;
                    ENDIF
            ENDWATCH
        ENDSTATE Hide 

        STATE Guard 
            INIT
                    Guard (TEAMSHIPS_Cruiser);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF
                    IF ( (ThisTeamIs (TEAM_GuardCruiserCorv)) OR (ThisTeamIs (TEAM_GuardCruiserDef)) )
                            IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                                    
                                    Jump Dock;
                            ENDIF
                    ENDIF

                    IF (ShipsCount (TEAMSHIPS_Cruiser) = 0)                     
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    Jump GuardCarrier;
                            ELSE
                                    IF ( (ThisTeamIs (TEAM_GuardCruiserCorv)) OR (ThisTeamIs (TEAM_GuardCruiserDef)) )
                                            Jump Kamikaze;                              
                                    ELSEIF (ThisTeamIs (TEAM_GuardCruiserIon))          
                                            TeamHyperspaceOut ();
                                            Jump NullState;
                                    ENDIF
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Guard 


        STATE GuardCarrier 
            INIT
                    IF (ThisTeamIs (TEAM_GuardCruiserDef))
                            FormationSphere ();
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierCorv))
                            FormationDelta ();
                    ELSEIF (ThisTeamIs (TEAM_GuardCarrierIon))
                            FormationWall ();
                    ENDIF
                    Guard (TEAMSHIPS_Cruiser);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF
                    IF ( (ThisTeamIs (TEAM_GuardCruiserCorv)) OR (ThisTeamIs (TEAM_GuardCruiserDef)) )
                            IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                                    
                                    Jump Dock;
                            ENDIF
                    ENDIF

                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)                     
                            IF ( (ThisTeamIs (TEAM_GuardCruiserCorv)) OR (ThisTeamIs (TEAM_GuardCruiserDef)) )
                                    Jump Kamikaze;                              
                            ELSEIF (ThisTeamIs (TEAM_GuardCruiserIon))          
                                    TeamHyperspaceOut ();
                                    Jump NullState;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCarrier 


        STATE Kamikaze 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetNearMothership, 3000);
                    ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_FleetNearMothership, "CLASS_Mothership");
                    Kamikaze (SHIPS_PlayerMothership);
                    Jump NullState;
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE Kamikaze 


        STATE Dock 
            INIT
                    DockStay (TEAM_Carrier);                        
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (TeamDockedReadyForLaunch ())                
                            Jump Launch;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            Jump Guard;
                    ENDIF
            ENDWATCH
        ENDSTATE Dock 


        STATE Launch 
            INIT
                    Launch ();                                      
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (TeamFinishedLaunching ())                   
                            Jump Guard;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            Jump Guard;
                    ENDIF
            ENDWATCH
        ENDSTATE Launch 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 


ENDFSM GuardCruiser















FSM STRInterceptors
    States WaitForLaunchOrder, Build, Decide, OnTheMoveToMothership, AttackNearby, AttackFleetAtMothership, AttackRestOfWorld,
           OnTheMoveToRestOfWorld, GuardCarrier, Dock, Launch, NullState;

    INIT
            VarCreateSet ("G_STRIntFighterIndex", 0);
            VarCreateSet ("G_STRIntFrigateIndex", 0);
            VarCreateSet ("G_STRIntFightSelectionExhausted", FALSE);
            VarCreateSet ("G_STRIntFrigSelectionExhausted", FALSE);
            Jump WaitForLaunchOrder;
    ENDINIT
    WATCH
            IF (ThisTeamIs (TEAM_STRIntScout))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ENDIF
    ENDWATCH


        STATE WaitForLaunchOrder 
            INIT
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            VarCreateSet ("G_STRIntScoutREADY", TRUE);      
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRIntInt))
                            VarCreateSet ("G_STRIntIntREADY", TRUE);        
                    ENDIF
            ENDINIT
            WATCH
                    IF (VarGet ("G_STRInterceptorsLAUNCH") = TRUE)
                            VarDestroy ("G_STRIntScoutREADY");
                            VarDestroy ("G_STRIntIntREADY");
                            Jump Build;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitForLaunchOrder 


        STATE Build 
            INIT
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            VarCreateSet ("G_STRIntScoutBuilding", TRUE);
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRIntInt))
                            VarCreateSet ("G_STRIntIntBuilding", TRUE);
                    ENDIF

                    VarCreateSet ("G_STRIntScoutNewships", 0);
                    VarCreateSet ("G_STRIntIntNewships", 0);
                    VarCreateSet ("G_STRIntScoutsToRequest", 0);
                    VarCreateSet ("G_STRIntIntsToRequest", 0);

                    
                    VarSet ("G_STRIntScoutsToRequest", (5 + (10*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));      
                    
                    
                    VarSet ("G_STRIntIntsToRequest", (5 + (10*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));        
                    

                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 35*(VarGet ("G_STRIntScoutsToRequest"))));     
                                    RequestShips ("LightInterceptor", VarGet ("G_STRIntScoutsToRequest"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 55*(VarGet ("G_STRIntIntsToRequest"))));     
                                    RequestShips ("HeavyInterceptor", VarGet ("G_STRIntScoutsToRequest"));
                            ENDIF
                    ENDIF
            ENDINIT
            WATCH
                    
                    
                    
                    

                    IF ( (VarGet ("G_STRIntScoutBuilding") = TRUE) AND (VarGet ("G_STRIntIntBuilding") = TRUE) )
                            VarDestroy ("G_STRInterceptorsLAUNCH");
                            VarDestroy ("G_STRIntScoutBuilding");
                            VarDestroy ("G_STRIntIntBuilding");
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            VarSet ("G_STRIntScoutNewships", VarGet ("G_STRIntScoutNewships") + NewShipsAdded ());
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            VarSet ("G_STRIntIntNewships", VarGet ("G_STRIntIntNewships") + NewShipsAdded ());
                    ENDIF


                    
                    IF ( ((VarGet ("G_STRIntScoutNewships") = VarGet ("G_STRIntScoutsToRequest")) AND
                          (VarGet ("G_STRIntIntNewships") = VarGet ("G_STRIntIntsToRequest"))) OR
                          ((ShipsCount (TEAMSHIPS_Carrier) = 0) AND ((ShipsCount (TEAMSHIPS_STRIntScout) > 0) OR (ShipsCount (TEAMSHIPS_STRIntInt) > 0))) )
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE Build 


        STATE Decide 
            INIT
                    FormationDelta3D ();

                    
                    IF (ShipsCount (TEAMSHIPS_STRIntScout) > 0)
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetAtMothership, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_FleetAtMothership, SHIPS_Mothership);                                
                            ShipsSelectClass (SHIPS_STRIntFighters, SHIPS_FleetAtMothership, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_STRIntFrigates, SHIPS_FleetAtMothership, "CLASS_Frigate");
                    ELSEIF (ShipsCount (TEAMSHIPS_STRIntInt) > 0)
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetAtMothership, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_FleetAtMothership, SHIPS_Mothership);                                
                            ShipsSelectClass (SHIPS_STRIntFighters, SHIPS_FleetAtMothership, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_STRIntFrigates, SHIPS_FleetAtMothership, "CLASS_Frigate");
                    ENDIF



                    
                    IF (ShipsCount (TEAMSHIPS_STRIntScout) > 0)
                            
                            FindEnemiesInside (VOLUME_WorldVolume, SHIPS_AllShipsInWorld, 1000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AllShipsInWorld, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AllShipsInWorld, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRIntWorldFighters, SHIPS_AllShipsInWorld, "CLASS_Fighter");
                            
                            ShipsSelectClass (SHIPS_STRIntWorldFrigates, SHIPS_AllShipsInWorld, "CLASS_Frigate");
                            

                            IF (ShipsSelectIndex (SHIPS_STRIntSingleFighter, SHIPS_STRIntWorldFighters, VarGet ("G_STRIntFighterIndex")))
                                    
                                    FindEnemiesNearTeam (SHIPS_STRIntSingleFighter, 10000);
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRIntSingleFighter, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_STRIntSingleFighter, SHIPS_Mothership);                                
                                    
                                    ShipsSelectClass (SHIPS_STRIntWorldNearbyFighters, SHIPS_STRIntSingleFighter, "CLASS_Fighter");
                                    VarInc ("G_STRIntFighterIndex");
                            ELSE
                                    VarSet ("G_STRIntFightSelectionExhausted", TRUE);
                            ENDIF

                            IF (ShipsSelectIndex (SHIPS_STRIntSingleFrigate, SHIPS_STRIntWorldFrigates, VarGet ("G_STRIntFrigateIndex")))
                                    
                                    FindEnemiesNearTeam (SHIPS_STRIntSingleFrigate, 10000);
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRIntSingleFrigate, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_STRIntSingleFrigate, SHIPS_Mothership);                                
                                    
                                    ShipsSelectClass (SHIPS_STRIntWorldNearbyFrigates, SHIPS_STRIntSingleFrigate, "CLASS_Frigate");
                                    VarInc ("G_STRIntFrigateIndex");
                            ELSE
                                    VarSet ("G_STRIntFrigSelectionExhausted", TRUE);
                            ENDIF
                    ELSEIF (ShipsCount (TEAMSHIPS_STRIntInt) > 0)
                            
                            FindEnemiesInside (VOLUME_WorldVolume, SHIPS_AllShipsInWorld, 1000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AllShipsInWorld, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AllShipsInWorld, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRIntWorldFighters, SHIPS_AllShipsInWorld, "CLASS_Fighter");
                            
                            ShipsSelectClass (SHIPS_STRIntWorldFrigates, SHIPS_AllShipsInWorld, "CLASS_Frigate");
                            

                            IF (ShipsSelectIndex (SHIPS_STRIntSingleFighter, SHIPS_STRIntWorldFighters, VarGet ("G_STRIntFighterIndex")))
                                    
                                    FindEnemiesNearTeam (SHIPS_STRIntSingleFighter, 10000);
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRIntSingleFighter, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_STRIntSingleFighter, SHIPS_Mothership);                                
                                    
                                    ShipsSelectClass (SHIPS_STRIntWorldNearbyFighters, SHIPS_STRIntSingleFighter, "CLASS_Fighter");
                                    VarInc ("G_STRIntFighterIndex");
                            ELSE
                                    VarSet ("G_STRIntFightSelectionExhausted", TRUE);
                            ENDIF
                            IF (ShipsSelectIndex (SHIPS_STRIntSingleFrigate, SHIPS_STRIntWorldFrigates, VarGet ("G_STRIntFrigateIndex")))
                                    
                                    FindEnemiesNearTeam (SHIPS_STRIntSingleFrigate, 10000);
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRIntSingleFrigate, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_STRIntSingleFrigate, SHIPS_Mothership);                                
                                    
                                    ShipsSelectClass (SHIPS_STRIntWorldNearbyFrigates, SHIPS_STRIntSingleFrigate, "CLASS_Frigate");
                                    VarInc ("G_STRIntFrigateIndex");
                            ELSE
                                    VarSet ("G_STRIntFrigSelectionExhausted", TRUE);
                            ENDIF
                    ENDIF


                    
                    
                    
                    
                    

                    
                    IF ( (62*(ShipsCount (SHIPS_STRIntFighters)) > 300) OR (ShipsCount (SHIPS_STRIntFrigates) > 0) )
                            VarSet ("G_STRIntFighterIndex", 0);
                            VarSet ("G_STRIntFrigateIndex", 0);
                            VarSet ("G_STRIntFightSelectionExhausted", FALSE);
                            VarSet ("G_STRIntFrigSelectionExhausted", FALSE);
                            Jump AttackFleetAtMothership;
                    
                    ELSEIF ( (NOT VarGet ("G_STRIntFightSelectionExhausted")) OR (NOT VarGet ("G_STRIntFrigSelectionExhausted")) )
                            IF ((62*(ShipsCount (SHIPS_STRIntWorldNearbyFighters)) > 300) OR (ShipsCount (SHIPS_STRIntWorldNearbyFrigates) > 0))
                                    VarSet ("G_STRIntFighterIndex", 0);
                                    VarSet ("G_STRIntFrigateIndex", 0);
                                    VarSet ("G_STRIntFightSelectionExhausted", FALSE);
                                    VarSet ("G_STRIntFrigSelectionExhausted", FALSE);
                                    Jump AttackRestOfWorld;
                            ELSE
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)         
                            VarSet ("G_STRIntFighterIndex", 0);
                            VarSet ("G_STRIntFrigateIndex", 0);
                            VarSet ("G_STRIntFightSelectionExhausted", FALSE);
                            VarSet ("G_STRIntFrigSelectionExhausted", FALSE);
                            Jump GuardCarrier;
                    ELSE
                            VarSet ("G_STRIntFighterIndex", 0);
                            VarSet ("G_STRIntFrigateIndex", 0);
                            VarSet ("G_STRIntFightSelectionExhausted", FALSE);
                            VarSet ("G_STRIntFrigSelectionExhausted", FALSE);
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                            ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_FleetAtMothership, "CLASS_Mothership");
                            Kamikaze (SHIPS_PlayerMothership);          
                            Jump NullState;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarSet ("G_STRIntFighterIndex", 0);
                            VarSet ("G_STRIntFrigateIndex", 0);
                            VarSet ("G_STRIntFightSelectionExhausted", FALSE);
                            VarSet ("G_STRIntFrigSelectionExhausted", FALSE);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            VarSet ("G_STRIntFighterIndex", 0);
                            VarSet ("G_STRIntFrigateIndex", 0);
                            VarSet ("G_STRIntFightSelectionExhausted", FALSE);
                            VarSet ("G_STRIntFrigSelectionExhausted", FALSE);
                            
                            Jump Dock;
                    ENDIF
            ENDWATCH
        ENDSTATE Decide 


        STATE AttackFleetAtMothership 
            INIT
                    IF (ShipsCount (TEAMSHIPS_STRIntScout) > 0)
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_PlayerFleet, 3000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_PlayerFleet, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_PlayerFleet, SHIPS_Mothership);                                
                            ShipsSelectClass (SHIPS_STRIntFleetFighters, SHIPS_PlayerFleet, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_STRIntFleetFrigates, SHIPS_PlayerFleet, "CLASS_Frigate");
                    ELSEIF (ShipsCount (TEAMSHIPS_STRIntInt) > 0)
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_PlayerFleet, 3000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_PlayerFleet, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_PlayerFleet, SHIPS_Mothership);                                
                            ShipsSelectClass (SHIPS_STRIntFleetFighters, SHIPS_PlayerFleet, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_STRIntFleetFrigates, SHIPS_PlayerFleet, "CLASS_Frigate");
                    ENDIF
                    IF (ShipsCount (SHIPS_STRIntFleetFighters) > 0)             
                            IF (ThisTeamIs (TEAM_STRIntScout))
                                    TeamVelocityMaxClear ();
                                    TacticsEvasive ();
                            ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                    TeamVelocityMaxClear ();
                                    TacticsAggressive ();
                            ENDIF
                            ShipsAdd (SHIPS_STRIntFleetATTACK, SHIPS_STRIntFleetFighters);
                    ELSEIF (ShipsCount (SHIPS_STRIntFleetFrigates) > 0)          
                            IF (ThisTeamIs (TEAM_STRIntScout))
                                    TeamVelocityMaxClear ();
                                    TacticsEvasive ();
                            ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                    TeamVelocityMaxClear ();
                                    TacticsNeutral ();
                            ENDIF
                            ShipsAdd (SHIPS_STRIntFleetATTACK, SHIPS_STRIntFleetFrigates);
                    ELSE
                            
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    Attack (SHIPS_STRIntFleetATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            
                            Jump Dock;
                    ENDIF



                    
                    IF (ShipsCount (SHIPS_STRIntFleetATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (ShipsOrder (TEAMSHIPS_STRIntScout) != 2)
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (ShipsOrder (TEAMSHIPS_STRIntInt) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF


                    
                    IF (NOT Nearby (SHIPSPOINT_STRIntFleetATTACK, 14000))
                            
                            Jump OnTheMoveToMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleetAtMothership 


        STATE OnTheMoveToMothership 
            INIT
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            TeamVelocityMaxSet (800);               
                    ENDIF
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            
                            Jump Dock;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (ShipsOrder (TEAMSHIPS_STRIntScout) != 2)
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (ShipsOrder (TEAMSHIPS_STRIntInt) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (UnderAttack (SHIPS_AttackingSTRIntScout))
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRIntScout, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_AttackingSTRIntScout, SHIPS_Mothership);                                
                                    IF (ShipsCount (SHIPS_AttackingSTRIntScout) > 0)
                                            MsgSendAll ("STRIntIsUnderAttack");
                                    ENDIF
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (UnderAttack (SHIPS_AttackingSTRIntInt))
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRIntScout, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_AttackingSTRIntScout, SHIPS_Mothership);                                
                                    IF (ShipsCount (SHIPS_AttackingSTRIntScout) > 0)
                                            MsgSendAll ("STRIntIsUnderAttack");
                                    ENDIF
                            ENDIF
                    ENDIF

                    
                    IF (MsgReceived ("STRIntIsUnderAttack"))
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            Jump AttackNearby;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRIntFleetATTACK) = 0)
                            ShipsClear (SHIPS_STRIntFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRIntFleetATTACK, 14000))
                            Jump AttackFleetAtMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToMothership 


        STATE AttackNearby 
            INIT
                    IF (ShipsCount (SHIPS_AttackingSTRIntScout) > 0)
                            ShipsSelectClass (SHIPS_STRIntNearbyFighters, SHIPS_AttackingSTRIntScout, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_STRIntNearbyFrigates, SHIPS_AttackingSTRIntScout, "CLASS_Frigate");
                            IF (ShipsCount (SHIPS_STRIntNearbyFighters) > 0)        
                                    IF (ThisTeamIs (TEAM_STRIntScout))
                                            TeamVelocityMaxClear ();
                                            TacticsEvasive ();
                                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                            TeamVelocityMaxClear ();
                                            TacticsAggressive ();
                                    ENDIF
                                    ShipsAdd (SHIPS_STRIntNearbyATTACK, SHIPS_STRIntNearbyFighters);
                            ELSEIF (ShipsCount (SHIPS_STRIntNearbyFrigates) > 0)    
                                    IF (ThisTeamIs (TEAM_STRIntScout))
                                            TeamVelocityMaxClear ();
                                            TacticsEvasive ();
                                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                            TeamVelocityMaxClear ();
                                            TacticsNeutral ();
                                    ENDIF
                                    ShipsAdd (SHIPS_STRIntNearbyATTACK, SHIPS_STRIntNearbyFrigates);
                            ELSEIF (ShipsCount (SHIPS_AttackingSTRInt) > 0)         
                                    TeamVelocityMaxClear ();
                                    TacticsNeutral ();
                                    ShipsAdd (SHIPS_STRIntNearbyATTACK, SHIPS_AttackingSTRInt);
                            ELSE
                                    
                                    ShipsClear (SHIPS_STRIntNearbyATTACK);
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ShipsCount (SHIPS_AttackingSTRIntInt) > 0)
                            ShipsSelectClass (SHIPS_STRIntNearbyFighters, SHIPS_AttackingSTRIntInt, "CLASS_Fighter");
                            ShipsSelectClass (SHIPS_STRIntNearbyFrigates, SHIPS_AttackingSTRIntInt, "CLASS_Frigate");
                            IF (ShipsCount (SHIPS_STRIntNearbyFighters) > 0)        
                                    IF (ThisTeamIs (TEAM_STRIntScout))
                                            TeamVelocityMaxClear ();
                                            TacticsEvasive ();
                                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                            TeamVelocityMaxClear ();
                                            TacticsAggressive ();
                                    ENDIF
                                    ShipsAdd (SHIPS_STRIntNearbyATTACK, SHIPS_STRIntNearbyFighters);
                            ELSEIF (ShipsCount (SHIPS_STRIntNearbyFrigates) > 0)          
                                    IF (ThisTeamIs (TEAM_STRIntScout))
                                            TeamVelocityMaxClear ();
                                            TacticsEvasive ();
                                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                            TeamVelocityMaxClear ();
                                            TacticsNeutral ();
                                    ENDIF
                                    ShipsAdd (SHIPS_STRIntNearbyATTACK, SHIPS_STRIntNearbyFrigates);
                            ELSEIF (ShipsCount (SHIPS_AttackingSTRInt) > 0)         
                                    TeamVelocityMaxClear ();
                                    TacticsNeutral ();
                                    ShipsAdd (SHIPS_STRIntNearbyATTACK, SHIPS_AttackingSTRInt);
                            ELSE
                                    
                                    ShipsClear (SHIPS_STRIntNearbyATTACK);
                                    Jump Decide;
                            ENDIF
                    ELSE
                            
                            ShipsClear (SHIPS_STRIntNearbyATTACK);
                            Jump Decide;
                    ENDIF



                    
                    Attack (SHIPS_STRIntNearbyATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRIntNearbyATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRIntNearbyATTACK);
                            
                            Jump Dock;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRIntNearbyATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRIntNearbyATTACK);
                            Jump Decide;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (ShipsOrder (TEAMSHIPS_STRIntScout) != 2)
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (ShipsOrder (TEAMSHIPS_STRIntInt) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (NOT UnderAttack (SHIPS_AttackingSTRIntScout))
                                    VarCreateSet ("G_IntScoutsAreFree", TRUE);
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (NOT UnderAttack (SHIPS_AttackingSTRIntInt))
                                    VarCreateSet ("G_IntIntsAreFree", TRUE);
                            ENDIF
                    ENDIF

                    IF ( (VarGet ("G_IntScoutsAreFree") = TRUE) AND (VarGet ("G_IntIntsAreFree") = TRUE) )
                            VarDestroy ("G_IntScoutsAreFree");
                            VarDestroy ("G_IntIntsAreFree");
                            
                            ShipsClear (SHIPS_STRIntNearbyATTACK);
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE AttackRestOfWorld 
            INIT
                    IF (ShipsCount (SHIPS_STRIntWorldNearbyFighters) > 0)             
                            TeamVelocityMaxClear ();
                            IF (ThisTeamIs (TEAM_STRIntScout))
                                    TacticsEvasive ();
                            ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                    TeamVelocityMaxClear ();
                                    TacticsAggressive ();
                            ENDIF
                            ShipsAdd (SHIPS_STRIntWorldATTACK, SHIPS_STRIntWorldNearbyFighters);
                    ELSEIF (ShipsCount (SHIPS_STRIntWorldNearbyFrigates) > 0)         
                            IF (ThisTeamIs (TEAM_STRIntScout))
                                    TeamVelocityMaxClear ();
                                    TacticsEvasive ();
                            ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                                    TeamVelocityMaxClear ();
                                    TacticsNeutral ();
                            ENDIF
                            ShipsAdd (SHIPS_STRIntWorldATTACK, SHIPS_STRIntWorldNearbyFrigates);
                    ELSE
                            
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    Attack (SHIPS_STRIntWorldATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRIntWorldATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            Jump Decide;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (ShipsOrder (TEAMSHIPS_STRIntScout) != 2)
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (ShipsOrder (TEAMSHIPS_STRIntInt) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRIntWorldATTACK, 14000))
                            
                            Jump OnTheMoveToRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackRestOfWorld 


        STATE OnTheMoveToRestOfWorld 
            INIT
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            TeamVelocityMaxSet (800);               
                    ENDIF
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (ShipsOrder (TEAMSHIPS_STRIntScout) != 2)
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (ShipsOrder (TEAMSHIPS_STRIntInt) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRIntScout))
                            IF (UnderAttack (SHIPS_AttackingSTRIntScout))
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRIntScout, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_AttackingSTRIntScout, SHIPS_Mothership);                                
                                    IF (ShipsCount (SHIPS_AttackingSTRIntScout) > 0)
                                            MsgSendAll ("STRIntIsUnderAttack");
                                    ENDIF
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRIntInt))
                            IF (UnderAttack (SHIPS_AttackingSTRIntInt))
                                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRIntScout, "CLASS_Mothership");       
                                    ShipsRemove (SHIPS_AttackingSTRIntScout, SHIPS_Mothership);                                
                                    IF (ShipsCount (SHIPS_AttackingSTRIntScout) > 0)
                                            MsgSendAll ("STRIntIsUnderAttack");
                                    ENDIF
                            ENDIF
                    ENDIF

                    
                    IF (MsgReceived ("STRIntIsUnderAttack"))
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            Jump AttackNearby;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRIntWorldATTACK) = 0)
                            ShipsClear (SHIPS_STRIntWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRIntWorldATTACK, 14000))
                            Jump AttackRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToRestOfWorld 


        STATE GuardCarrier 
            INIT
                    Guard (TEAMSHIPS_Carrier);
                    TimerCreateSetStart ("GoDecideAgain", 30);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            
                            Jump Dock;
                    ENDIF


                    IF (TimerExpiredDestroy ("GoDecideAgain"))      
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCarrier 


        STATE Dock 
            INIT
                    DockStay (TEAM_Carrier);                        
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    IF (TeamDockedReadyForLaunch ())                
                            Jump Launch;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE Dock 


        STATE Launch 
            INIT
                    Launch ();                                      
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    IF (TeamFinishedLaunching ())                   
                            Jump Decide;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE Launch 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM STRInterceptors













FSM STRBombers
    States WaitForLaunchOrder, Build, Decide, Guard, OnTheMoveToMothership, AttackNearby, AttackFleetAtMothership, AttackRestOfWorld,
           OnTheMoveToRestOfWorld, GuardCarrier, Dock, Launch, NullState;

    INIT
            VarCreateSet ("G_STRBomFrigateIndex", 0);
            VarCreateSet ("G_STRBomDestroyerIndex", 0);
            VarCreateSet ("G_STRBomFrigSelectionExhausted", FALSE);
            VarCreateSet ("G_STRBomDesSelectionExhausted", FALSE);
            Jump WaitForLaunchOrder;
    ENDINIT
    WATCH
            IF (ThisTeamIs (TEAM_STRBomberAT))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ENDIF
    ENDWATCH


        STATE WaitForLaunchOrder 
            INIT
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            VarCreateSet ("G_STRBomberATREADY", TRUE);      
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRBomberHC))
                            VarCreateSet ("G_STRBomberHCREADY", TRUE);      
                    ENDIF
            ENDINIT
            WATCH
                    IF (VarGet ("G_STRBombersLAUNCH") = TRUE)
                            VarDestroy ("G_STRBomberATREADY");
                            VarDestroy ("G_STRBomberHCREADY");
                            Jump Build;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitForLaunchOrder 


        STATE Build 
            INIT
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            VarCreateSet ("G_STRBomberATBuilding", TRUE);
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRBomberHC))
                            VarCreateSet ("G_STRBomberHCBuilding", TRUE);
                    ENDIF

                    VarCreateSet ("G_STRBomberATNewships", 0);
                    VarCreateSet ("G_STRBomberHCNewships", 0);
                    VarCreateSet ("G_STRBombersToRequest", 0);
                    VarCreateSet ("G_STRCorvsToRequest", 0);

                    
                    VarSet ("G_STRBombersToRequest", (5 + (10*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));        
                    
                    
                    VarSet ("G_STRCorvsToRequest", (2 + (4*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));          
                    

                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 85*(VarGet ("G_STRBombersToRequest"))));   
                                    RequestShips ("AttackBomber", VarGet ("G_STRBombersToRequest"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 260*(VarGet ("G_STRCorvsToRequest"))));    
                                    RequestShips ("HeavyCorvette", VarGet ("G_STRCorvsToRequest"));
                            ENDIF
                    ENDIF

                    VarDestroy ("G_STRBomberTeamIsBuilt");
            ENDINIT
            WATCH
                    
                    
                    
                    

                    IF ( (VarGet ("G_STRBomberATBuilding") = TRUE) AND (VarGet ("G_STRBomberHCBuilding") = TRUE) )
                            VarDestroy ("G_STRBombersLAUNCH");
                            VarDestroy ("G_STRBomberATBuilding");
                            VarDestroy ("G_STRBomberHCBuilding");
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            VarSet ("G_STRBomberATNewships", VarGet ("G_STRBomberATNewships") + NewShipsAdded ());
                    ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                            VarSet ("G_STRBomberHCNewships", VarGet ("G_STRBomberHCNewships") + NewShipsAdded ());
                    ENDIF


                    
                    IF ( ((VarGet ("G_STRBomberATNewships") = VarGet ("G_STRBombersToRequest")) AND
                          (VarGet ("G_STRBomberHCNewships") = VarGet ("G_STRCorvsToRequest"))) OR
                          ((ShipsCount (TEAMSHIPS_Carrier) = 0) AND ((ShipsCount (TEAMSHIPS_STRBomberAT) > 0) OR (ShipsCount (TEAMSHIPS_STRBomberHC) > 0))) )
                            IF (ThisTeamIs (TEAM_STRBomberAT))
                                    VarCreateSet ("G_STRBomberTeamIsBuilt", TRUE);
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                                    Jump Guard;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Build 


        STATE Decide 
            INIT
                    FormationClaw ();

                    
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetAtMothership, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_FleetAtMothership, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRBomberFrigates, SHIPS_FleetAtMothership, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_STRBomberDestroyer, SHIPS_FleetAtMothership, "CLASS_Destroyer");


                    
                    
                    FindEnemiesInside (VOLUME_WorldVolume, SHIPS_AllShipsInWorld, 1000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AllShipsInWorld, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_AllShipsInWorld, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRBomWorldFrigates, SHIPS_AllShipsInWorld, "CLASS_Frigate");
                    
                    ShipsSelectClass (SHIPS_STRBomWorldDestroyers, SHIPS_AllShipsInWorld, "CLASS_Destroyer");
                    

                    IF (ShipsSelectIndex (SHIPS_STRBomSingleFrigate, SHIPS_STRBomWorldFrigates, VarGet ("G_STRBomFrigateIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRBomSingleFrigate, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRBomSingleFrigate, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRBomSingleFrigate, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRBomWorldNearbyFrigates, SHIPS_STRBomSingleFrigate, "CLASS_Frigate");
                            VarInc ("G_STRBomFrigateIndex");
                    ELSE
                            VarSet ("G_STRBomFrigSelectionExhausted", TRUE);
                    ENDIF

                    IF (ShipsSelectIndex (SHIPS_STRBomSingleDestroyer, SHIPS_STRBomWorldDestroyers, VarGet ("G_STRBomDestroyerIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRBomSingleDestroyer, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRBomSingleDestroyer, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRBomSingleDestroyer, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRBomWorldNearbyDes, SHIPS_STRBomSingleDestroyer, "CLASS_Destroyer");
                            VarInc ("G_STRBomDestroyerIndex");
                    ELSE
                            VarSet ("G_STRBomDesSelectionExhausted", TRUE);
                    ENDIF



                    
                    
                    
                    
                    

                    
                    IF ( (612*(ShipsCount (SHIPS_STRBomberFrigates)) + 1425*(ShipsCount (SHIPS_STRBomberDestroyer))) > 500)
                            VarSet ("G_STRBomFrigateIndex", 0);
                            VarSet ("G_STRBomDestroyerIndex", 0);
                            VarSet ("G_STRBomFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRBomDesSelectionExhausted", FALSE);
                            Jump AttackFleetAtMothership;
                    
                    ELSEIF ( (NOT VarGet ("G_STRBomFrigSelectionExhausted")) OR (NOT VarGet ("G_STRBomDesSelectionExhausted")) )
                            IF ( (612*(ShipsCount (SHIPS_STRBomWorldNearbyFrigates)) + 1425*(ShipsCount (SHIPS_STRBomWorldNearbyDes))) > 500)
                                    VarSet ("G_STRBomFrigateIndex", 0);
                                    VarSet ("G_STRBomDestroyerIndex", 0);
                                    VarSet ("G_STRBomFrigSelectionExhausted", FALSE);
                                    VarSet ("G_STRBomDesSelectionExhausted", FALSE);
                                    Jump AttackRestOfWorld;
                            ELSE
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)         
                            VarSet ("G_STRBomFrigateIndex", 0);
                            VarSet ("G_STRBomDestroyerIndex", 0);
                            VarSet ("G_STRBomFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRBomDesSelectionExhausted", FALSE);
                            Jump GuardCarrier;
                    ELSE
                            VarSet ("G_STRBomFrigateIndex", 0);
                            VarSet ("G_STRBomDestroyerIndex", 0);
                            VarSet ("G_STRBomFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRBomDesSelectionExhausted", FALSE);
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                            ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_FleetAtMothership, "CLASS_Mothership");
                            VarCreateSet ("STRBomberHCKamikazeNow", TRUE);
                            Kamikaze (SHIPS_PlayerMothership);          
                            Jump NullState;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarSet ("G_STRBomFrigateIndex", 0);
                            VarSet ("G_STRBomDestroyerIndex", 0);
                            VarSet ("G_STRBomFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRBomDesSelectionExhausted", FALSE);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            VarSet ("G_STRBomFrigateIndex", 0);
                            VarSet ("G_STRBomDestroyerIndex", 0);
                            VarSet ("G_STRBomFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRBomDesSelectionExhausted", FALSE);
                            
                            Jump Dock;
                    ENDIF
            ENDWATCH
        ENDSTATE Decide 


        STATE Guard 
            INIT
                    FormationBroad ();
                    Guard (TEAMSHIPS_STRBomberAT);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            
                            Jump Dock;
                    ENDIF

                    
                    IF (VarGet ("STRBomberHCKamikazeNow") = TRUE)
                            VarDestroy ("STRBomberHCKamikazeNow");
                            Kamikaze (SHIPS_PlayerMothership);
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRBomberTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRBomberAT) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF
            ENDWATCH
        ENDSTATE Guard 


        STATE AttackFleetAtMothership 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_PlayerFleet, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_PlayerFleet, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_PlayerFleet, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRBomFleetFrigates, SHIPS_PlayerFleet, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_STRBomFleetDestroyers, SHIPS_PlayerFleet, "CLASS_Destroyer");
                    IF (ShipsCount (SHIPS_STRBomFleetFrigates) > 0)             
                            ShipsAdd (SHIPS_STRBomFleetATTACK, SHIPS_STRBomFleetFrigates);
                    ELSEIF (ShipsCount (SHIPS_STRBomFleetDestroyers) > 0)       
                            ShipsAdd (SHIPS_STRBomFleetATTACK, SHIPS_STRBomFleetDestroyers);
                    ELSE
                            
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    TeamVelocityMaxClear ();
                    TacticsNeutral ();
                    Attack (SHIPS_STRBomFleetATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRBomFleetATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            IF (ShipsOrder (TEAMSHIPS_STRBomberAT) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRBomFleetATTACK, 14000))
                            
                            Jump OnTheMoveToMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleetAtMothership 


        STATE OnTheMoveToMothership 
            INIT
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            TeamVelocityMaxSet (520);               
                    ENDIF
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            IF (ShipsOrder (TEAMSHIPS_STRBomberAT) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRBombers))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRBombers, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRBombers, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRBombers) > 0)
                                    ShipsClear (SHIPS_STRBomFleetATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRBomFleetATTACK) = 0)
                            ShipsClear (SHIPS_STRBomFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRBomFleetATTACK, 14000))
                            Jump AttackFleetAtMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToMothership 


        STATE AttackNearby 
            INIT
                    ShipsSelectClass (SHIPS_STRBomNearbyFrigates, SHIPS_AttackingSTRBombers, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_STRBomNearbyDestroyers, SHIPS_AttackingSTRBombers, "CLASS_Destroyer");
                    IF (ShipsCount (SHIPS_STRBomNearbyFrigates) > 0)                
                            ShipsAdd (SHIPS_STRBomNearbyATTACK, SHIPS_STRBomNearbyFrigates);
                    ELSEIF (ShipsCount (SHIPS_STRBomNearbyDestroyers) > 0)          
                            ShipsAdd (SHIPS_STRBomNearbyATTACK, SHIPS_STRBomNearbyDestroyers);
                    ELSEIF (ShipsCount (SHIPS_AttackingSTRBombers) > 0)                 
                            ShipsAdd (SHIPS_STRBomNearbyATTACK, SHIPS_AttackingSTRBombers);
                    ELSE
                            
                            ShipsClear (SHIPS_STRBomNearbyATTACK);
                            Jump Decide;
                    ENDIF



                    
                    TeamVelocityMaxClear ();
                    TacticsNeutral ();
                    Attack (SHIPS_STRBomNearbyATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRBomNearbyATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRBomNearbyATTACK);
                            
                            Jump Dock;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRBomNearbyATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRBomNearbyATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            IF (ShipsOrder (TEAMSHIPS_STRBomberAT) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT UnderAttack (SHIPS_AttackingSTRBombers))
                            
                            ShipsClear (SHIPS_STRBomNearbyATTACK);
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE AttackRestOfWorld 
            INIT
                    IF (ShipsCount (SHIPS_STRBomWorldNearbyFrigates) > 0)               
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRBomWorldATTACK, SHIPS_STRBomWorldNearbyFrigates);
                    ELSEIF (ShipsCount (SHIPS_STRBomWorldNearbyDes) > 0)                
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRBomWorldATTACK, SHIPS_STRBomWorldNearbyDes);
                    ELSE
                            
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    Attack (SHIPS_STRBomWorldATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRBomWorldATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            IF (ShipsOrder (TEAMSHIPS_STRBomberAT) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRBomWorldATTACK, 14000))
                            
                            Jump OnTheMoveToRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackRestOfWorld 


        STATE OnTheMoveToRestOfWorld 
            INIT
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            TeamVelocityMaxSet (520);               
                    ENDIF
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRBomberAT))
                            IF (ShipsOrder (TEAMSHIPS_STRBomberAT) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRBombers))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRBombers, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRBombers, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRBombers) > 0)
                                    ShipsClear (SHIPS_STRBomWorldATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRBomWorldATTACK) = 0)
                            ShipsClear (SHIPS_STRBomWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRBomWorldATTACK, 14000))
                            Jump AttackRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToRestOfWorld 


        STATE GuardCarrier 
            INIT
                    Guard (TEAMSHIPS_Carrier);
                    TimerCreateSetStart ("GoDecideAgain", 30);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_Carrier) > 0) )
                            
                            Jump Dock;
                    ENDIF


                    IF (TimerExpiredDestroy ("GoDecideAgain"))      
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCarrier 


        STATE Dock 
            INIT
                    DockStay (TEAM_Carrier);                        
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    IF (TeamDockedReadyForLaunch ())                
                            Jump Launch;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            IF (ThisTeamIs (TEAM_STRBomberAT))
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                                    Jump Guard;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Dock 


        STATE Launch 
            INIT
                    Launch ();                                      
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    IF (TeamFinishedLaunching ())                   
                            IF (ThisTeamIs (TEAM_STRBomberAT))
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                                    Jump Guard;
                            ENDIF
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                            IF (ThisTeamIs (TEAM_STRBomberAT))
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRBomberHC))
                                    Jump Guard;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Launch 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM STRBombers















FSM STRMG
    States WaitForLaunchOrder, Build, Decide, Guard, OnTheMoveToMothership, AttackNearby, AttackFleetAtMothership, AttackRestOfWorld,
           OnTheMoveToRestOfWorld, GuardCarrier, Dock, Launch, NullState;

    INIT
            VarCreateSet ("G_STRMGFighterIndex", 0);
            VarCreateSet ("G_STRMGCorvetteIndex", 0);
            VarCreateSet ("G_STRMGFightSelectionExhausted", FALSE);
            VarCreateSet ("G_STRMGCorvSelectionExhausted", FALSE);
            Jump WaitForLaunchOrder;
    ENDINIT
    WATCH
            IF (ThisTeamIs (TEAM_STRMGMG))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ELSEIF (ThisTeamIs (TEAM_STRMGSF))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ENDIF
    ENDWATCH


        STATE WaitForLaunchOrder 
            INIT
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            VarCreateSet ("G_STRMGMGREADY", TRUE);      
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRMGSF))
                            VarCreateSet ("G_STRMGSFREADY", TRUE);      
                    ENDIF
            ENDINIT
            WATCH
                    IF (VarGet ("G_STRMGLAUNCH") = TRUE)
                            VarDestroy ("G_STRMGMGREADY");
                            VarDestroy ("G_STRMGSFREADY");
                            Jump Build;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitForLaunchOrder 


        STATE Build 
            INIT
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            VarCreateSet ("G_STRMGMGBuilding", TRUE);
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRMGSF))
                            VarCreateSet ("G_STRMGSFBuilding", TRUE);
                    ENDIF

                    VarCreateSet ("G_STRMGMGNewships", 0);
                    VarCreateSet ("G_STRMGSFNewships", 0);
                    VarCreateSet ("G_STRMGsToRequest", 0);
                    VarCreateSet ("G_STRSFsToRequest", 0);

                    
                    VarSet ("G_STRMGsToRequest", (5 + (10*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));        
                    
                    
                    VarSet ("G_STRSFsToRequest", (1 + (1*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));          
                    

                    IF (ThisTeamIs (TEAM_STRMGMG))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 225*(VarGet ("G_STRMGsToRequest"))));   
                                    RequestShips ("MultiGunCorvette", VarGet ("G_STRMGsToRequest"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRMGSF))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 425*(VarGet ("G_STRSFsToRequest"))));    
                                    RequestShips ("AdvanceSupportFrigate", VarGet ("G_STRSFsToRequest"));
                            ENDIF
                    ENDIF

                    VarDestroy ("G_STRMGMGTeamIsBuilt");                    
            ENDINIT
            WATCH
                    
                    
                    
                    

                    IF ( (VarGet ("G_STRMGMGBuilding") = TRUE) AND (VarGet ("G_STRMGSFBuilding") = TRUE) )
                            VarDestroy ("G_STRMGLAUNCH");
                            VarDestroy ("G_STRMGMGBuilding");
                            VarDestroy ("G_STRMGSFBuilding");
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            VarSet ("G_STRMGMGNewships", VarGet ("G_STRMGMGNewships") + NewShipsAdded ());
                    ELSEIF (ThisTeamIs (TEAM_STRMGSF))
                            VarSet ("G_STRMGSFNewships", VarGet ("G_STRMGSFNewships") + NewShipsAdded ());
                    ENDIF


                    
                    IF ( ((VarGet ("G_STRMGMGNewships") = VarGet ("G_STRMGsToRequest")) AND
                          (VarGet ("G_STRMGSFNewships") = VarGet ("G_STRSFsToRequest"))) OR
                          ((ShipsCount (TEAMSHIPS_Carrier) = 0) AND ((ShipsCount (TEAMSHIPS_STRMGMG) > 0) OR (ShipsCount (TEAMSHIPS_STRMGSF) > 0))) )
                            IF (ThisTeamIs (TEAM_STRMGMG))
                                    VarCreateSet ("G_STRMGMGTeamIsBuilt", TRUE);        
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRMGSF))
                                    Jump Guard;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Build 


        STATE Decide 
            INIT
                    FormationClaw ();
                    TacticsEvasive ();

                    
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetAtMothership, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_FleetAtMothership, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRMGFighters, SHIPS_FleetAtMothership, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRMGCorvettes, SHIPS_FleetAtMothership, "CLASS_Corvette");


                    
                    
                    FindEnemiesInside (VOLUME_WorldVolume, SHIPS_AllShipsInWorld, 1000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AllShipsInWorld, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_AllShipsInWorld, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRMGWorldFighters, SHIPS_AllShipsInWorld, "CLASS_Fighter");
                    
                    ShipsSelectClass (SHIPS_STRMGWorldCorvettes, SHIPS_AllShipsInWorld, "CLASS_Corvette");
                    

                    IF (ShipsSelectIndex (SHIPS_STRMGSingleFighter, SHIPS_STRMGWorldFighters, VarGet ("G_STRMGFighterIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRMGSingleFighter, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRMGSingleFighter, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRMGSingleFighter, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRMGWorldNearbyFighters, SHIPS_STRMGSingleFighter, "CLASS_Fighter");
                            VarInc ("G_STRMGFighterIndex");
                    ELSE
                            VarSet ("G_STRMGFightSelectionExhausted", TRUE);
                    ENDIF

                    IF (ShipsSelectIndex (SHIPS_STRMGSingleCorvette, SHIPS_STRMGWorldCorvettes, VarGet ("G_STRMGCorvetteIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRMGSingleCorvette, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRMGSingleCorvette, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRMGSingleCorvette, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRMGWorldNearbyCorv, SHIPS_STRMGSingleCorvette, "CLASS_Corvette");
                            VarInc ("G_STRMGCorvetteIndex");
                    ELSE
                            VarSet ("G_STRMGCorvSelectionExhausted", TRUE);
                    ENDIF



                    
                    
                    
                    
                    

                    
                    IF ( (62*(ShipsCount (SHIPS_STRMGFighters)) + 222*(ShipsCount (SHIPS_STRMGCorvettes))) > 300)
                            VarSet ("G_STRMGFighterIndex", 0);
                            VarSet ("G_STRMGCorvetteIndex", 0);
                            VarSet ("G_STRMGFightSelectionExhausted", FALSE);
                            VarSet ("G_STRMGCorvSelectionExhausted", FALSE);
                            Jump AttackFleetAtMothership;
                    
                    ELSEIF ( (NOT VarGet ("G_STRMGFightSelectionExhausted")) OR (NOT VarGet ("G_STRMGCorvSelectionExhausted")) )
                            IF ( (62*(ShipsCount (SHIPS_STRMGWorldNearbyFighters)) + 222*(ShipsCount (SHIPS_STRMGWorldNearbyCorv))) > 300)
                                    VarSet ("G_STRMGFighterIndex", 0);
                                    VarSet ("G_STRMGCorvetteIndex", 0);
                                    VarSet ("G_STRMGFightSelectionExhausted", FALSE);
                                    VarSet ("G_STRMGCorvSelectionExhausted", FALSE);
                                    Jump AttackRestOfWorld;
                            ELSE
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)         
                            VarSet ("G_STRMGFighterIndex", 0);
                            VarSet ("G_STRMGCorvetteIndex", 0);
                            VarSet ("G_STRMGFightSelectionExhausted", FALSE);
                            VarSet ("G_STRMGCorvSelectionExhausted", FALSE);
                            Jump GuardCarrier;
                    ELSE
                            VarSet ("G_STRMGFighterIndex", 0);
                            VarSet ("G_STRMGCorvetteIndex", 0);
                            VarSet ("G_STRMGFightSelectionExhausted", FALSE);
                            VarSet ("G_STRMGCorvSelectionExhausted", FALSE);
                            FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                            ShipsSelectClass (SHIPS_PlayerMothership, SHIPS_FleetAtMothership, "CLASS_Mothership");
                            VarCreateSet ("STRMGSFKamikazeNow", TRUE);
                            Kamikaze (SHIPS_PlayerMothership);          
                            Jump NullState;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarSet ("G_STRMGFighterIndex", 0);
                            VarSet ("G_STRMGCorvetteIndex", 0);
                            VarSet ("G_STRMGFightSelectionExhausted", FALSE);
                            VarSet ("G_STRMGCorvSelectionExhausted", FALSE);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            VarSet ("G_STRMGFighterIndex", 0);
                            VarSet ("G_STRMGCorvetteIndex", 0);
                            VarSet ("G_STRMGFightSelectionExhausted", FALSE);
                            VarSet ("G_STRMGCorvSelectionExhausted", FALSE);
                            
                            Jump Dock;
                    ENDIF
            ENDWATCH
        ENDSTATE Decide 


        STATE Guard 
            INIT
                    Guard (TEAMSHIPS_STRMGMG);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRMGSFKamikazeNow") = TRUE)
                            VarDestroy ("STRMGSFKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRMGMGTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRMGMG) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

            ENDWATCH
        ENDSTATE Guard 


        STATE AttackFleetAtMothership 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_PlayerFleet, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_PlayerFleet, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_PlayerFleet, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRMGFleetFighters, SHIPS_PlayerFleet, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRMGFleetCorvettes, SHIPS_PlayerFleet, "CLASS_Corvette");
                    IF (ShipsCount (SHIPS_STRMGFleetFighters) > 0)             
                            ShipsAdd (SHIPS_STRMGFleetATTACK, SHIPS_STRMGFleetFighters);
                    ELSEIF (ShipsCount (SHIPS_STRMGFleetCorvettes) > 0)       
                            ShipsAdd (SHIPS_STRMGFleetATTACK, SHIPS_STRMGFleetCorvettes);
                    ELSE
                            
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    TeamVelocityMaxClear ();
                    TacticsEvasive ();
                    Attack (SHIPS_STRMGFleetATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRMGFleetATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            IF (ShipsOrder (TEAMSHIPS_STRMGMG) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRMGFleetATTACK, 14000))
                            
                            Jump OnTheMoveToMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleetAtMothership 


        STATE OnTheMoveToMothership 
            INIT
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            TeamVelocityMaxSet (450);               
                    ENDIF
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            
                            Jump Dock;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            IF (ShipsOrder (TEAMSHIPS_STRMGMG) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRMGs))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRMGs, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRMGs, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRMGs) > 0)
                                    ShipsClear (SHIPS_STRMGFleetATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRMGFleetATTACK) = 0)
                            ShipsClear (SHIPS_STRMGFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRMGFleetATTACK, 14000))
                            Jump AttackFleetAtMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToMothership 


        STATE AttackNearby 
            INIT
                    ShipsSelectClass (SHIPS_STRMGNearbyFighters, SHIPS_AttackingSTRMGs, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRMGNearbyCorvettes, SHIPS_AttackingSTRMGs, "CLASS_Corvette");
                    IF (ShipsCount (SHIPS_STRMGNearbyFighters) > 0)                
                            ShipsAdd (SHIPS_STRMGNearbyATTACK, SHIPS_STRMGNearbyFighters);
                    ELSEIF (ShipsCount (SHIPS_STRMGNearbyCorvettes) > 0)          
                            ShipsAdd (SHIPS_STRMGNearbyATTACK, SHIPS_STRMGNearbyCorvettes);
                    ELSEIF (ShipsCount (SHIPS_AttackingSTRMGs) > 0)                 
                            ShipsAdd (SHIPS_STRMGNearbyATTACK, SHIPS_AttackingSTRMGs);
                    ELSE
                            
                            ShipsClear (SHIPS_STRMGNearbyATTACK);
                            Jump Decide;
                    ENDIF



                    
                    TeamVelocityMaxClear ();
                    TacticsNeutral ();
                    Attack (SHIPS_STRMGNearbyATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRMGNearbyATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            ShipsClear (SHIPS_STRMGNearbyATTACK);
                            
                            Jump Dock;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRMGNearbyATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRMGNearbyATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            IF (ShipsOrder (TEAMSHIPS_STRMGMG) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT UnderAttack (SHIPS_AttackingSTRMGs))
                            
                            ShipsClear (SHIPS_STRMGNearbyATTACK);
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE AttackRestOfWorld 
            INIT
                    IF (ShipsCount (SHIPS_STRMGWorldNearbyFighters) > 0)               
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRMGWorldATTACK, SHIPS_STRMGWorldNearbyFighters);
                    ELSEIF (ShipsCount (SHIPS_STRMGWorldNearbyCorv) > 0)                
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRMGWorldATTACK, SHIPS_STRMGWorldNearbyCorv);
                    ELSE
                            
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    
                    Attack (SHIPS_STRMGWorldATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRMGWorldATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            IF (ShipsOrder (TEAMSHIPS_STRMGMG) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRMGWorldATTACK, 14000))
                            
                            Jump OnTheMoveToRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackRestOfWorld 


        STATE OnTheMoveToRestOfWorld 
            INIT
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            TeamVelocityMaxSet (450);               
                    ENDIF
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            
                            Jump Dock;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRMGMG))
                            IF (ShipsOrder (TEAMSHIPS_STRMGMG) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRMGs))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRMGs, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRMGs, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRMGs) > 0)
                                    ShipsClear (SHIPS_STRMGWorldATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRMGWorldATTACK) = 0)
                            ShipsClear (SHIPS_STRMGWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRMGWorldATTACK, 14000))
                            Jump AttackRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToRestOfWorld 


        STATE GuardCarrier 
            INIT
                    Guard (TEAMSHIPS_Carrier);
                    TimerCreateSetStart ("GoDecideAgain", 30);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF
                    IF ( ((TeamHealthAverage () < 40) OR (TeamFuelLowest () < 25)) AND
                         ((ShipsCount (TEAMSHIPS_STRMGSF) > 0) OR (ShipsCount (TEAMSHIPS_Carrier) > 0)) )
                            
                            Jump Dock;
                    ENDIF


                    IF (TimerExpiredDestroy ("GoDecideAgain"))      
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCarrier 


        STATE Dock 
            INIT
                    IF (ShipsCount (TEAMSHIPS_STRMGSF) > 0)
                            DockStay (TEAM_STRMGSF);                        
                            VarCreateSet ("DockingWithSupportFrigate", TRUE);
                    ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                            DockStay (TEAM_Carrier);                        
                            VarCreateSet ("DockingWithCarrier", TRUE);
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarDestroy ("DockingWithSupportFrigate");
                            VarDestroy ("DockingWithCarrier");
                            Jump WaitForLaunchOrder;
                    ENDIF

                    IF (VarGet ("DockingWithSupportFrigate") = TRUE)
                            IF (ShipsCount (TEAMSHIPS_STRMGSF) = 0)         
                                    VarDestroy ("DockingWithSupportFrigate");
                                    Jump Decide;
                            ENDIF
                    ELSEIF (VarGet ("DockingWithCarrier") = TRUE)
                            IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                                    VarDestroy ("DockingWithCarrier");
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    IF (TeamDockedReadyForLaunch ())                        
                            Jump Launch;
                    ENDIF

            ENDWATCH
        ENDSTATE Dock 


        STATE Launch 
            INIT
                    Launch ();                                              
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarDestroy ("DockingWithSupportFrigate");
                            VarDestroy ("DockingWithCarrier");
                            Jump WaitForLaunchOrder;
                    ENDIF

                    IF (TeamFinishedLaunching ())                           
                            VarDestroy ("DockingWithSupportFrigate");
                            VarDestroy ("DockingWithCarrier");
                            Jump Decide;
                    ENDIF

                    IF (VarGet ("DockingWithSupportFrigate") = TRUE)
                            IF (ShipsCount (TEAMSHIPS_STRMGSF) = 0)         
                                    VarDestroy ("DockingWithSupportFrigate");
                                    Jump Decide;
                            ENDIF
                    ELSEIF (VarGet ("DockingWithCarrier") = TRUE)
                            IF (ShipsCount (TEAMSHIPS_Carrier) = 0)         
                                    VarDestroy ("DockingWithCarrier");
                                    Jump Decide;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Launch 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM STRMG















FSM STRGW
    States WaitForLaunchOrder, Build, Decide, Guard, GuardGravityOn, GuardGravityOff, OnTheMoveToMothership, AttackNearby,
           AttackFleetAtMothership, AttackRestOfWorld, OnTheMoveToRestOfWorld, GuardCarrier, NullState;

    INIT
            VarCreateSet ("G_STRGWFighterIndex", 0);
            VarCreateSet ("G_STRGWCorvetteIndex", 0);
            VarCreateSet ("G_STRGWFightSelectionExhausted", FALSE);
            VarCreateSet ("G_STRGWCorvSelectionExhausted", FALSE);
            Jump WaitForLaunchOrder;
    ENDINIT
    WATCH
            IF (ThisTeamIs (TEAM_STRGWIon))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ELSEIF (ThisTeamIs (TEAM_STRGWGrav))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ENDIF
    ENDWATCH


        STATE WaitForLaunchOrder 
            INIT
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            VarCreateSet ("G_STRGWIonREADY", TRUE);      
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRGWGrav))
                            VarCreateSet ("G_STRGWGravREADY", TRUE);      
                    ENDIF
            ENDINIT
            WATCH
                    IF (VarGet ("G_STRGWLAUNCH") = TRUE)
                            VarDestroy ("G_STRGWIonREADY");
                            VarDestroy ("G_STRGWGravREADY");
                            Jump Build;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitForLaunchOrder 


        STATE Build 
            INIT
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            VarCreateSet ("G_STRGWIonBuilding", TRUE);
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRGWGrav))
                            VarCreateSet ("G_STRGWGravBuilding", TRUE);
                    ENDIF

                    VarCreateSet ("G_STRGWIonNewships", 0);
                    VarCreateSet ("G_STRGWGravNewships", 0);
                    VarCreateSet ("G_STRGWIonsToRequest", 0);
                    VarCreateSet ("G_STRGWGWsToRequest", 0);

                    
                    VarSet ("G_STRGWIonsToRequest", (1 + (1*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));        
                    
                    
                    VarSet ("G_STRGWGWsToRequest", (1 + (0*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));          
                    

                    IF (ThisTeamIs (TEAM_STRGWIon))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 650*(VarGet ("G_STRGWIonsToRequest"))));   
                                    RequestShips ("IonCannonFrigate", VarGet ("G_STRGWIonsToRequest"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRGWGrav))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 600*(VarGet ("G_STRGWGWsToRequest"))));    
                                    RequestShips ("GravWellGenerator", VarGet ("G_STRGWGWsToRequest"));
                            ENDIF
                    ENDIF

                    VarDestroy ("G_STRGWIonTeamIsBuilt");
            ENDINIT
            WATCH
                    
                    
                    
                    

                    IF ( (VarGet ("G_STRGWIonBuilding") = TRUE) AND (VarGet ("G_STRGWGravBuilding") = TRUE) )
                            VarDestroy ("G_STRGWLAUNCH");
                            VarDestroy ("G_STRGWIonBuilding");
                            VarDestroy ("G_STRGWGravBuilding");
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            VarSet ("G_STRGWIonNewships", VarGet ("G_STRGWIonNewships") + NewShipsAdded ());
                    ELSEIF (ThisTeamIs (TEAM_STRGWGrav))
                            VarSet ("G_STRGWGravNewships", VarGet ("G_STRGWGravNewships") + NewShipsAdded ());
                    ENDIF


                    
                    IF ( ((VarGet ("G_STRGWIonNewships") = VarGet ("G_STRGWIonsToRequest")) AND
                          (VarGet ("G_STRGWGravNewships") = VarGet ("G_STRGWGWsToRequest"))) OR
                          ((ShipsCount (TEAMSHIPS_Carrier) = 0) AND ((ShipsCount (TEAMSHIPS_STRGWIon) > 0) OR (ShipsCount (TEAMSHIPS_STRGWGrav) > 0))) )
                            IF (ThisTeamIs (TEAM_STRGWIon))
                                    VarCreateSet ("G_STRGWIonTeamIsBuilt", TRUE);
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRGWGrav))
                                    Jump Guard;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Build 


        STATE Decide 
            INIT
                    FormationBroad ();

                    
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetAtMothership, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_FleetAtMothership, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRGWFighters, SHIPS_FleetAtMothership, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRGWCorvettes, SHIPS_FleetAtMothership, "CLASS_Corvette");


                    
                    
                    FindEnemiesInside (VOLUME_WorldVolume, SHIPS_AllShipsInWorld, 1000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AllShipsInWorld, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_AllShipsInWorld, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRGWWorldFighters, SHIPS_AllShipsInWorld, "CLASS_Fighter");
                    
                    ShipsSelectClass (SHIPS_STRGWWorldCorvettes, SHIPS_AllShipsInWorld, "CLASS_Corvette");
                    

                    IF (ShipsSelectIndex (SHIPS_STRGWSingleFighter, SHIPS_STRGWWorldFighters, VarGet ("G_STRGWFighterIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRGWSingleFighter, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRGWSingleFighter, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRGWSingleFighter, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRGWWorldNearbyFighters, SHIPS_STRGWSingleFighter, "CLASS_Fighter");
                            VarInc ("G_STRGWFighterIndex");
                    ELSE
                            VarSet ("G_STRGWFightSelectionExhausted", TRUE);
                    ENDIF

                    IF (ShipsSelectIndex (SHIPS_STRGWSingleCorvette, SHIPS_STRGWWorldCorvettes, VarGet ("G_STRGWCorvetteIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRGWSingleCorvette, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRGWSingleCorvette, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRGWSingleCorvette, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRGWWorldNearbyCorv, SHIPS_STRGWSingleCorvette, "CLASS_Corvette");
                            VarInc ("G_STRGWCorvetteIndex");
                    ELSE
                            VarSet ("G_STRGWCorvSelectionExhausted", TRUE);
                    ENDIF



                    
                    
                    
                    
                    

                    
                    IF ( (62*(ShipsCount (SHIPS_STRGWFighters)) + 222*(ShipsCount (SHIPS_STRGWCorvettes))) > 300)
                            VarSet ("G_STRGWFighterIndex", 0);
                            VarSet ("G_STRGWCorvetteIndex", 0);
                            VarSet ("G_STRGWFightSelectionExhausted", FALSE);
                            VarSet ("G_STRGWCorvSelectionExhausted", FALSE);
                            Jump AttackFleetAtMothership;
                    
                    ELSEIF ( (NOT VarGet ("G_STRGWFightSelectionExhausted")) OR (NOT VarGet ("G_STRGWCorvSelectionExhausted")) )
                            IF ( (62*(ShipsCount (SHIPS_STRGWWorldNearbyFighters)) + 222*(ShipsCount (SHIPS_STRGWWorldNearbyCorv))) > 300)
                                    VarSet ("G_STRGWFighterIndex", 0);
                                    VarSet ("G_STRGWCorvetteIndex", 0);
                                    VarSet ("G_STRGWFightSelectionExhausted", FALSE);
                                    VarSet ("G_STRGWCorvSelectionExhausted", FALSE);
                                    Jump AttackRestOfWorld;
                            ELSE
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)         
                            VarSet ("G_STRGWFighterIndex", 0);
                            VarSet ("G_STRGWCorvetteIndex", 0);
                            VarSet ("G_STRGWFightSelectionExhausted", FALSE);
                            VarSet ("G_STRGWCorvSelectionExhausted", FALSE);
                            Jump GuardCarrier;
                    ELSE
                            VarSet ("G_STRGWFighterIndex", 0);
                            VarSet ("G_STRGWCorvetteIndex", 0);
                            VarSet ("G_STRGWFightSelectionExhausted", FALSE);
                            VarSet ("G_STRGWCorvSelectionExhausted", FALSE);
                            VarCreateSet ("STRGWSFKamikazeNow", TRUE);
                            TeamHyperspaceOut ();                        
                            Jump NullState;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarSet ("G_STRGWFighterIndex", 0);
                            VarSet ("G_STRGWCorvetteIndex", 0);
                            VarSet ("G_STRGWFightSelectionExhausted", FALSE);
                            VarSet ("G_STRGWCorvSelectionExhausted", FALSE);
                            Jump WaitForLaunchOrder;
                    ENDIF
            ENDWATCH
        ENDSTATE Decide 


        STATE Guard 
            INIT
                    Guard (TEAMSHIPS_STRGWIon);                     
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRGWSFKamikazeNow") = TRUE)
                            VarDestroy ("STRGWSFKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRGWIonTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRGWIon) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRGWEVERYONE, 10000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRGWEVERYONE, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_STRGWEVERYONE, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRGWYahooFighters, SHIPS_STRGWEVERYONE, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRGWYahooCorvettes, SHIPS_STRGWEVERYONE, "CLASS_Corvette");
                    ShipsAdd (SHIPS_STRGWStrikeCraft, SHIPS_STRGWYahooFighters);
                    ShipsAdd (SHIPS_STRGWStrikeCraft, SHIPS_STRGWYahooCorvettes);
                    IF (ShipsCount (SHIPS_STRGWStrikeCraft) > 0)
                            Jump GuardGravityOn;
                    ENDIF
            ENDWATCH
        ENDSTATE Guard 


        STATE GuardGravityOn 
            INIT
                    Guard (TEAMSHIPS_STRGWIon);                     
                    SpecialToggle();                                
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRGWSFKamikazeNow") = TRUE)
                            VarDestroy ("STRGWSFKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRGWIonTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRGWIon) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRGWEVERYONE, 10000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRGWEVERYONE, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_STRGWEVERYONE, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRGWYahooFighters, SHIPS_STRGWEVERYONE, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRGWYahooCorvettes, SHIPS_STRGWEVERYONE, "CLASS_Corvette");
                    ShipsAdd (SHIPS_STRGWStrikeCraft, SHIPS_STRGWYahooFighters);
                    ShipsAdd (SHIPS_STRGWStrikeCraft, SHIPS_STRGWYahooCorvettes);
                    IF (ShipsCount (SHIPS_STRGWStrikeCraft) = 0)
                            Jump GuardGravityOff;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardGravityOn 


        STATE GuardGravityOff 
            INIT
                    Guard (TEAMSHIPS_STRGWIon);                     
                    SpecialToggle();                                
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRGWSFKamikazeNow") = TRUE)
                            VarDestroy ("STRGWSFKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRGWIonTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRGWIon) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRGWEVERYONE, 10000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRGWEVERYONE, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_STRGWEVERYONE, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRGWYahooFighters, SHIPS_STRGWEVERYONE, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRGWYahooCorvettes, SHIPS_STRGWEVERYONE, "CLASS_Corvette");
                    ShipsAdd (SHIPS_STRGWStrikeCraft, SHIPS_STRGWYahooFighters);
                    ShipsAdd (SHIPS_STRGWStrikeCraft, SHIPS_STRGWYahooCorvettes);
                    IF (ShipsCount (SHIPS_STRGWStrikeCraft) > 0)
                            Jump GuardGravityOn;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardGravityOff 


        STATE AttackFleetAtMothership 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_PlayerFleet, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_PlayerFleet, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_PlayerFleet, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRGWFleetFighters, SHIPS_PlayerFleet, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRGWFleetCorvettes, SHIPS_PlayerFleet, "CLASS_Corvette");
                    IF (ShipsCount (SHIPS_STRGWFleetFighters) > 0)             
                            ShipsAdd (SHIPS_STRGWFleetATTACK, SHIPS_STRGWFleetFighters);
                    ELSEIF (ShipsCount (SHIPS_STRGWFleetCorvettes) > 0)       
                            ShipsAdd (SHIPS_STRGWFleetATTACK, SHIPS_STRGWFleetCorvettes);
                    ELSE
                            
                            ShipsClear (SHIPS_STRGWFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    TeamVelocityMaxClear ();
                    
                    Attack (SHIPS_STRGWFleetATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRGWFleetATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRGWFleetATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRGWFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            IF (ShipsOrder (TEAMSHIPS_STRGWIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRGWFleetATTACK, 14000))
                            
                            Jump OnTheMoveToMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleetAtMothership 


        STATE OnTheMoveToMothership 
            INIT
                    
                    
                    
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRGWFleetATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            IF (ShipsOrder (TEAMSHIPS_STRGWIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRGWs))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRGWs, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRGWs, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRGWs) > 0)
                                    ShipsClear (SHIPS_STRGWFleetATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRGWFleetATTACK) = 0)
                            ShipsClear (SHIPS_STRGWFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRGWFleetATTACK, 14000))
                            Jump AttackFleetAtMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToMothership 


        STATE AttackNearby 
            INIT
                    ShipsSelectClass (SHIPS_STRGWNearbyFighters, SHIPS_AttackingSTRGWs, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_STRGWNearbyCorvettes, SHIPS_AttackingSTRGWs, "CLASS_Corvette");
                    IF (ShipsCount (SHIPS_STRGWNearbyFighters) > 0)                
                            ShipsAdd (SHIPS_STRGWNearbyATTACK, SHIPS_STRGWNearbyFighters);
                    ELSEIF (ShipsCount (SHIPS_STRGWNearbyCorvettes) > 0)          
                            ShipsAdd (SHIPS_STRGWNearbyATTACK, SHIPS_STRGWNearbyCorvettes);
                    ELSEIF (ShipsCount (SHIPS_AttackingSTRGWs) > 0)                 
                            ShipsAdd (SHIPS_STRGWNearbyATTACK, SHIPS_AttackingSTRGWs);
                    ELSE
                            
                            ShipsClear (SHIPS_STRGWNearbyATTACK);
                            Jump Decide;
                    ENDIF



                    
                    TeamVelocityMaxClear ();
                    TacticsNeutral ();
                    Attack (SHIPS_STRGWNearbyATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRGWNearbyATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRGWNearbyATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRGWNearbyATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            IF (ShipsOrder (TEAMSHIPS_STRGWIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT UnderAttack (SHIPS_AttackingSTRGWs))
                            
                            ShipsClear (SHIPS_STRGWNearbyATTACK);
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE AttackRestOfWorld 
            INIT
                    IF (ShipsCount (SHIPS_STRGWWorldNearbyFighters) > 0)               
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRGWWorldATTACK, SHIPS_STRGWWorldNearbyFighters);
                    ELSEIF (ShipsCount (SHIPS_STRGWWorldNearbyCorv) > 0)                
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRGWWorldATTACK, SHIPS_STRGWWorldNearbyCorv);
                    ELSE
                            
                            ShipsClear (SHIPS_STRGWWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    
                    Attack (SHIPS_STRGWWorldATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRGWWorldATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRGWWorldATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRGWWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            IF (ShipsOrder (TEAMSHIPS_STRGWIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRGWWorldATTACK, 14000))
                            
                            Jump OnTheMoveToRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackRestOfWorld 


        STATE OnTheMoveToRestOfWorld 
            INIT
                    
                    
                    
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRGWWorldATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRGWIon))
                            IF (ShipsOrder (TEAMSHIPS_STRGWIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRGWs))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRGWs, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRGWs, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRGWs) > 0)
                                    ShipsClear (SHIPS_STRGWWorldATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRGWWorldATTACK) = 0)
                            ShipsClear (SHIPS_STRGWWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRGWWorldATTACK, 14000))
                            Jump AttackRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToRestOfWorld 


        STATE GuardCarrier 
            INIT
                    Guard (TEAMSHIPS_Carrier);
                    TimerCreateSetStart ("GoDecideAgain", 30);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF


                    IF (TimerExpiredDestroy ("GoDecideAgain"))      
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCarrier 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM STRGW
















FSM STRCG
    States WaitForLaunchOrder, Build, Decide, Guard, GuardCloakityOn, GuardCloakityOff, OnTheMoveToMothership, AttackNearby,
           AttackFleetAtMothership, AttackRestOfWorld, OnTheMoveToRestOfWorld, GuardCarrier, NullState;

    INIT
            VarCreateSet ("G_STRCGFrigateIndex", 0);
            VarCreateSet ("G_STRCGDestroyerIndex", 0);
            VarCreateSet ("G_STRCGFrigSelectionExhausted", FALSE);
            VarCreateSet ("G_STRCGDesSelectionExhausted", FALSE);
            Jump WaitForLaunchOrder;
    ENDINIT
    WATCH
            IF (ThisTeamIs (TEAM_STRCGIon))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ELSEIF (ThisTeamIs (TEAM_STRCGCloak))
                    IFONCE ( (ShipsCount (THISTEAMSHIPS) = 0) AND (VarGet ("ACT3HasBegun") = TRUE) )
                            Jump NullState;
                    ENDIFONCE
            ENDIF
    ENDWATCH


        STATE WaitForLaunchOrder 
            INIT
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            VarCreateSet ("G_STRCGIonREADY", TRUE);      
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRCGCloak))
                            VarCreateSet ("G_STRCGCloakREADY", TRUE);      
                    ENDIF
            ENDINIT
            WATCH
                    IF (VarGet ("G_STRCGLAUNCH") = TRUE)
                            VarDestroy ("G_STRCGIonREADY");
                            VarDestroy ("G_STRCGCloakREADY");
                            Jump Build;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitForLaunchOrder 


        STATE Build 
            INIT
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            VarCreateSet ("G_STRCGIonBuilding", TRUE);
                    ENDIF
                    IF (ThisTeamIs (TEAM_STRCGCloak))
                            VarCreateSet ("G_STRCGCloakBuilding", TRUE);
                    ENDIF

                    VarCreateSet ("G_STRCGIonNewships", 0);
                    VarCreateSet ("G_STRCGCloakNewships", 0);
                    VarCreateSet ("G_STRCGIonsToRequest", 0);
                    VarCreateSet ("G_STRCGCGsToRequest", 0);

                    
                    VarSet ("G_STRCGIonsToRequest", (1 + (2*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));        
                    
                    
                    VarSet ("G_STRCGCGsToRequest", (1 + (0*((ShipsCount (TEAMSHIPS_TestTeam)))/100)));          
                    

                    IF (ThisTeamIs (TEAM_STRCGIon))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 650*(VarGet ("G_STRCGIonsToRequest"))));   
                                    RequestShips ("IonCannonFrigate", VarGet ("G_STRCGIonsToRequest"));
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_STRCGCloak))
                            IF (ShipsCount (TEAMSHIPS_Carrier) > 0)
                                    RUsSet (1, (RUsGet (1) + 500*(VarGet ("G_STRCGCGsToRequest"))));    
                                    RequestShips ("CloakGenerator", VarGet ("G_STRCGCGsToRequest"));
                            ENDIF
                    ENDIF

                    VarDestroy ("G_STRCGIonTeamIsBuilt");
            ENDINIT
            WATCH
                    
                    
                    
                    

                    IF ( (VarGet ("G_STRCGIonBuilding") = TRUE) AND (VarGet ("G_STRCGCloakBuilding") = TRUE) )
                            VarDestroy ("G_STRCGLAUNCH");
                            VarDestroy ("G_STRCGIonBuilding");
                            VarDestroy ("G_STRCGCloakBuilding");
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            VarSet ("G_STRCGIonNewships", VarGet ("G_STRCGIonNewships") + NewShipsAdded ());
                    ELSEIF (ThisTeamIs (TEAM_STRCGCloak))
                            VarSet ("G_STRCGCloakNewships", VarGet ("G_STRCGCloakNewships") + NewShipsAdded ());
                    ENDIF


                    
                    IF ( ((VarGet ("G_STRCGIonNewships") = VarGet ("G_STRCGIonsToRequest")) AND
                          (VarGet ("G_STRCGCloakNewships") = VarGet ("G_STRCGCGsToRequest"))) OR
                          ((ShipsCount (TEAMSHIPS_Carrier) = 0) AND ((ShipsCount (TEAMSHIPS_STRCGIon) > 0) OR (ShipsCount (TEAMSHIPS_STRCGCloak) > 0))) )
                            IF (ThisTeamIs (TEAM_STRCGIon))
                                    VarCreateSet ("G_STRCGIonTeamIsBuilt", TRUE);
                                    Jump Decide;
                            ELSEIF (ThisTeamIs (TEAM_STRCGCloak))
                                    Jump Guard;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE Build 


        STATE Decide 
            INIT
                    FormationBroad ();

                    
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_FleetAtMothership, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_FleetAtMothership, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_FleetAtMothership, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRCGFrigates, SHIPS_FleetAtMothership, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_STRCGDestroyers, SHIPS_FleetAtMothership, "CLASS_Destroyer");


                    
                    
                    FindEnemiesInside (VOLUME_WorldVolume, SHIPS_AllShipsInWorld, 1000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_AllShipsInWorld, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_AllShipsInWorld, SHIPS_Mothership);                                
                    
                    ShipsSelectClass (SHIPS_STRCGWorldFrigates, SHIPS_AllShipsInWorld, "CLASS_Frigate");
                    
                    ShipsSelectClass (SHIPS_STRCGWorldDestroyers, SHIPS_AllShipsInWorld, "CLASS_Destroyer");
                    

                    IF (ShipsSelectIndex (SHIPS_STRCGSingleFrigate, SHIPS_STRCGWorldFrigates, VarGet ("G_STRCGFrigateIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRCGSingleFrigate, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRCGSingleFrigate, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRCGSingleFrigate, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRCGWorldNearbyFrigates, SHIPS_STRCGSingleFrigate, "CLASS_Frigate");
                            VarInc ("G_STRCGFrigateIndex");
                    ELSE
                            VarSet ("G_STRCGFrigSelectionExhausted", TRUE);
                    ENDIF

                    IF (ShipsSelectIndex (SHIPS_STRCGSingleDestroyer, SHIPS_STRCGWorldDestroyers, VarGet ("G_STRCGDestroyerIndex")))
                            
                            FindEnemiesNearTeam (SHIPS_STRCGSingleDestroyer, 10000);
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_STRCGSingleDestroyer, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_STRCGSingleDestroyer, SHIPS_Mothership);                                
                            
                            ShipsSelectClass (SHIPS_STRCGWorldNearbyDes, SHIPS_STRCGSingleDestroyer, "CLASS_Destroyer");
                            VarInc ("G_STRCGDestroyerIndex");
                    ELSE
                            VarSet ("G_STRCGDesSelectionExhausted", TRUE);
                    ENDIF



                    
                    
                    
                    
                    

                    
                    IF ( (612*(ShipsCount (SHIPS_STRCGFrigates)) + 1425*(ShipsCount (SHIPS_STRCGDestroyers))) > 500)
                            VarSet ("G_STRCGFrigateIndex", 0);
                            VarSet ("G_STRCGDestroyerIndex", 0);
                            VarSet ("G_STRCGFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRCGDesSelectionExhausted", FALSE);
                            Jump AttackFleetAtMothership;
                    
                    ELSEIF ( (NOT VarGet ("G_STRCGFrigSelectionExhausted")) OR (NOT VarGet ("G_STRCGDesSelectionExhausted")) )
                            IF ( (612*(ShipsCount (SHIPS_STRCGWorldNearbyFrigates)) + 1425*(ShipsCount (SHIPS_STRCGWorldNearbyDes))) > 500)
                                    VarSet ("G_STRCGFrigateIndex", 0);
                                    VarSet ("G_STRCGDestroyerIndex", 0);
                                    VarSet ("G_STRCGFrigSelectionExhausted", FALSE);
                                    VarSet ("G_STRCGDesSelectionExhausted", FALSE);
                                    Jump AttackRestOfWorld;
                            ELSE
                                    Jump Decide;
                            ENDIF
                    ELSEIF (ShipsCount (TEAMSHIPS_Carrier) > 0)         
                            VarSet ("G_STRCGFrigateIndex", 0);
                            VarSet ("G_STRCGDestroyerIndex", 0);
                            VarSet ("G_STRCGFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRCGDesSelectionExhausted", FALSE);
                            Jump GuardCarrier;
                    ELSE
                            VarSet ("G_STRCGFrigateIndex", 0);
                            VarSet ("G_STRCGDestroyerIndex", 0);
                            VarSet ("G_STRCGFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRCGDesSelectionExhausted", FALSE);
                            VarCreateSet ("STRCGCGKamikazeNow", TRUE);
                            TeamHyperspaceOut ();                        
                            Jump NullState;
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            VarSet ("G_STRCGFrigateIndex", 0);
                            VarSet ("G_STRCGDestroyerIndex", 0);
                            VarSet ("G_STRCGFrigSelectionExhausted", FALSE);
                            VarSet ("G_STRCGDesSelectionExhausted", FALSE);
                            Jump WaitForLaunchOrder;
                    ENDIF
            ENDWATCH
        ENDSTATE Decide 


        STATE Guard 
            INIT
                    Guard (TEAMSHIPS_STRCGIon);                     
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRCGCGKamikazeNow") = TRUE)
                            VarDestroy ("STRCGCGKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRCGIonTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRCGIon) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGEVERYONE, 14000);
                    IF (ShipsCount (SHIPS_STRCGEVERYONE) > 0)
                            Jump GuardCloakityOn;
                    ENDIF
            ENDWATCH
        ENDSTATE Guard 


        STATE GuardCloakityOn 
            INIT
                    Guard (TEAMSHIPS_STRCGIon);                     
                    SpecialToggle();                                
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRCGCGKamikazeNow") = TRUE)
                            VarDestroy ("STRCGCGKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRCGIonTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRCGIon) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGEVERYONE, 14000);
                    IF (ShipsCount (SHIPS_STRCGEVERYONE) = 0)
                            Jump GuardCloakityOff;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCloakityOn 


        STATE GuardCloakityOff 
            INIT
                    Guard (TEAMSHIPS_STRCGIon);                     
                    SpecialToggle();                                
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (VarGet ("STRCGCGKamikazeNow") = TRUE)
                            VarDestroy ("STRCGCGKamikazeNow");
                            TeamHyperspaceOut ();
                            Jump NullState;
                    ENDIF

                    
                    IF ( (VarGet ("G_STRCGIonTeamIsBuilt") = TRUE) AND (ShipsCount (TEAMSHIPS_STRCGIon) = 0) )
                            TeamGiveToAI ();
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGEVERYONE, 10000);
                    IF (ShipsCount (SHIPS_STRCGEVERYONE) > 0)
                            Jump GuardCloakityOn;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCloakityOff 


        STATE AttackFleetAtMothership 
            INIT
                    FindEnemiesInside (VOLUME_MothershipSphere, SHIPS_PlayerFleet, 3000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_PlayerFleet, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_PlayerFleet, SHIPS_Mothership);                                
                    ShipsSelectClass (SHIPS_STRCGFleetFrigates, SHIPS_PlayerFleet, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_STRCGFleetDestroyers, SHIPS_PlayerFleet, "CLASS_Destroyer");
                    IF (ShipsCount (SHIPS_STRCGFleetFrigates) > 0)             
                            ShipsAdd (SHIPS_STRCGFleetATTACK, SHIPS_STRCGFleetFrigates);
                    ELSEIF (ShipsCount (SHIPS_STRCGFleetDestroyers) > 0)       
                            ShipsAdd (SHIPS_STRCGFleetATTACK, SHIPS_STRCGFleetDestroyers);
                    ELSE
                            
                            ShipsClear (SHIPS_STRCGFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    TeamVelocityMaxClear ();
                    
                    
                    Attack (SHIPS_STRCGFleetATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRCGFleetATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRCGFleetATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRCGFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            IF (ShipsOrder (TEAMSHIPS_STRCGIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGLookinForProx, 16000);
                    IF ( (ShipsSelectType (SHIPS_STRCGFleetProxSensors, SHIPS_STRCGLookinForProx, "ProximitySensor")) AND (ShipsCount (TEAMSHIPS_STRCGCloak) > 0) )
                            Jump AttackNearby;
                    ENDIF


                    
                    IF (NOT Nearby (SHIPSPOINT_STRCGFleetATTACK, 14000))
                            
                            Jump OnTheMoveToMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackFleetAtMothership 


        STATE OnTheMoveToMothership 
            INIT
                    
                    
                    
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRCGFleetATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            IF (ShipsOrder (TEAMSHIPS_STRCGIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRCGs))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRCGs, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRCGs, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRCGs) > 0)
                                    ShipsClear (SHIPS_STRCGFleetATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGLookinForProx, 16000);
                    IF ( (ShipsSelectType (SHIPS_STRCGFleetProxSensors, SHIPS_STRCGLookinForProx, "ProximitySensor")) AND (ShipsCount (TEAMSHIPS_STRCGCloak) > 0) )
                            Jump AttackNearby;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRCGFleetATTACK) = 0)
                            ShipsClear (SHIPS_STRCGFleetATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRCGFleetATTACK, 14000))
                            Jump AttackFleetAtMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToMothership 


        STATE AttackNearby 
            INIT
                    
                    FindEnemiesNearTeam (SHIPS_STRCGLookinForProx, 16000);
                    ShipsSelectClass (SHIPS_Mothership, SHIPS_STRCGLookinForProx, "CLASS_Mothership");       
                    ShipsRemove (SHIPS_STRCGLookinForProx, SHIPS_Mothership);                                
                    ShipsSelectType (SHIPS_STRCGFleetProxSensors, SHIPS_STRCGLookinForProx, "ProximitySensor");

                    ShipsSelectClass (SHIPS_STRCGNearbyFrigates, SHIPS_AttackingSTRCGs, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_STRCGNearbyDestroyers, SHIPS_AttackingSTRCGs, "CLASS_Destroyer");
                    IF ( (ShipsCount (SHIPS_STRCGFleetProxSensors) > 0) AND (ShipsCount (TEAMSHIPS_STRCGCloak) > 0) )  
                            VarCreateSet ("G_AttackingProximitySensors", TRUE);
                            ShipsAdd (SHIPS_STRCGNearbyATTACK, SHIPS_STRCGFleetProxSensors);
                    ELSEIF (ShipsCount (SHIPS_STRCGNearbyFrigates) > 0)                
                            ShipsAdd (SHIPS_STRCGNearbyATTACK, SHIPS_STRCGNearbyFrigates);
                    ELSEIF (ShipsCount (SHIPS_STRCGNearbyDestroyers) > 0)          
                            ShipsAdd (SHIPS_STRCGNearbyATTACK, SHIPS_STRCGNearbyDestroyers);
                    ELSEIF (ShipsCount (SHIPS_AttackingSTRCGs) > 0)                 
                            ShipsAdd (SHIPS_STRCGNearbyATTACK, SHIPS_AttackingSTRCGs);
                    ELSE
                            
                            ShipsClear (SHIPS_STRCGNearbyATTACK);
                            VarDestroy ("G_AttackingProximitySensors");
                            Jump Decide;
                    ENDIF



                    
                    IF (ShipsSelectCapital (SHIPS_STRCGCapitalTargets, SHIPS_STRCGNearbyATTACK))        
                            TeamVelocityMaxClear ();
                            TacticsNeutral ();
                            
                            Attack (SHIPS_STRCGNearbyATTACK);
                    ELSE                                                                                
                            TeamVelocityMaxClear ();
                            TacticsNeutral ();
                            Attack (SHIPS_STRCGNearbyATTACK);
                    ENDIF

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            
                            ShipsClear (SHIPS_STRCGNearbyATTACK);
                            VarDestroy ("G_AttackingProximitySensors");
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRCGNearbyATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRCGNearbyATTACK);
                            VarDestroy ("G_AttackingProximitySensors");
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            IF (ShipsOrder (TEAMSHIPS_STRCGIon) != 2)
                                    
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF ( (NOT UnderAttack (SHIPS_AttackingSTRCGs)) AND (VarGet ("G_AttackingProximitySensors") = FALSE) )
                            
                            ShipsClear (SHIPS_STRCGNearbyATTACK);
                            VarDestroy ("G_AttackingProximitySensors");
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE AttackRestOfWorld 
            INIT
                    IF (ShipsCount (SHIPS_STRCGWorldNearbyFrigates) > 0)               
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRCGWorldATTACK, SHIPS_STRCGWorldNearbyFrigates);
                    ELSEIF (ShipsCount (SHIPS_STRCGWorldNearbyDes) > 0)                
                            TeamVelocityMaxClear ();
                            ShipsAdd (SHIPS_STRCGWorldATTACK, SHIPS_STRCGWorldNearbyDes);
                    ELSE
                            
                            ShipsClear (SHIPS_STRCGWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    VarCreateSet ("G_SHIPSSTRCGWorldATTACK", ShipsCount (SHIPS_STRCGWorldATTACK));
                    
                    Attack (SHIPS_STRCGWorldATTACK);

            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRCGWorldATTACK);
                            
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ShipsCount (SHIPS_STRCGWorldATTACK) = 0)
                            
                            ShipsClear (SHIPS_STRCGWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            IF (ShipsOrder (TEAMSHIPS_STRCGIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGLookinForProx, 16000);
                    IF ( (ShipsSelectType (SHIPS_STRCGFleetProxSensors, SHIPS_STRCGLookinForProx, "ProximitySensor")) AND (ShipsCount (TEAMSHIPS_STRCGCloak) > 0) )
                            Jump AttackNearby;
                    ENDIF

                    
                    IF (NOT Nearby (SHIPSPOINT_STRCGWorldATTACK, 14000))
                            
                            Jump OnTheMoveToRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackRestOfWorld 


        STATE OnTheMoveToRestOfWorld 
            INIT
                    
                    
                    
                    TacticsNeutral ();
                    
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            ShipsClear (SHIPS_STRCGWorldATTACK);
                            Jump WaitForLaunchOrder;
                    ENDIF


                    
                    IF (ThisTeamIs (TEAM_STRCGIon))
                            IF (ShipsOrder (TEAMSHIPS_STRCGIon) != 2)
                                    Jump Decide;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingSTRCGs))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingSTRCGs, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingSTRCGs, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingSTRCGs) > 0)
                                    ShipsClear (SHIPS_STRCGWorldATTACK);
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF

                    
                    IF (ShipsCount (SHIPS_STRCGWorldATTACK) = 0)
                            ShipsClear (SHIPS_STRCGWorldATTACK);
                            Jump Decide;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGLookinForProx, 16000);
                    IF ( (ShipsSelectType (SHIPS_STRCGFleetProxSensors, SHIPS_STRCGLookinForProx, "ProximitySensor")) AND (ShipsCount (TEAMSHIPS_STRCGCloak) > 0) )
                            Jump AttackNearby;
                    ENDIF

                    
                    IF (Nearby (SHIPSPOINT_STRCGWorldATTACK, 14000))
                            Jump AttackRestOfWorld;
                    ENDIF
            ENDWATCH
        ENDSTATE OnTheMoveToRestOfWorld 


        STATE GuardCarrier 
            INIT
                    Guard (TEAMSHIPS_Carrier);
                    TimerCreateSetStart ("GoDecideAgain", 30);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump WaitForLaunchOrder;
                    ENDIF

                    
                    FindEnemiesNearTeam (SHIPS_STRCGLookinForProx, 16000);
                    IF ( (ShipsSelectType (SHIPS_STRCGFleetProxSensors, SHIPS_STRCGLookinForProx, "ProximitySensor")) AND (ShipsCount (TEAMSHIPS_STRCGCloak) > 0) )
                            Jump AttackNearby;
                    ENDIF

                    IF (TimerExpiredDestroy ("GoDecideAgain"))      
                            Jump Decide;
                    ENDIF
            ENDWATCH
        ENDSTATE GuardCarrier 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM STRCG























FSM Defector
    States HyperspaceOut, HyperspaceIn, GetToPlayerMothership, WaitToHyperspaceOut, HyperspaceOut2, NullState;

    INIT
            TeamHealthSet (200);                                        
            ShipsDamageModifierSet (TEAMSHIPS_Defector, 200);           
            ShipsAdd (SHIPS_ThisIsTheDefector, TEAMSHIPS_Defector);
            Jump HyperspaceOut;
    ENDINIT
    WATCH
            
            IFONCE (TeamHealthAverage () < 25)
                    TimerCreateSetStart ("KeepDefectorAlive", 90);
            ENDIFONCE
            IF ( (TeamHealthAverage () < 25) AND (TimerRemaining ("KeepDefectorAlive") > 0) )
                    TeamHealthSet (25);
            ENDIF
            IFONCE (VarGet ("G_MakeDefectorAnAlly") = TRUE)
                    TeamAttributesSet (256);
            ENDIFONCE
    ENDWATCH


        STATE HyperspaceOut 
            INIT
                    HideShips (THISTEAMSHIPS);
                    TeamHyperspaceOut ();                           
            ENDINIT
            WATCH
                    IF (VarGet ("G_ACT3HasBegun") = TRUE)
                            Jump HyperspaceIn;
                    ENDIF
            ENDWATCH
        ENDSTATE HyperspaceOut 


        STATE HyperspaceIn 
            INIT
                    TeamHyperspaceIn (POINT_DefectorIN);
                    TimerCreateSetStart ("G_DefectorHasHyperspacedIn", 14);
                    TimerCreateSetStart ("G_FocusOnDefectorNow", 19);
                    TimerCreateSetStart ("G_ChaseDefectorsComeOnIn", 1);
            ENDINIT
            WATCH
                    IF (TimerExpired ("G_DefectorHasHyperspacedIn"))
                            Jump GetToPlayerMothership;
                    ENDIF
            ENDWATCH
        ENDSTATE HyperspaceIn 


        STATE GetToPlayerMothership 
            INIT
                    
                    PatrolPath (PATH_DefectorSAFE);
                    
            ENDINIT
            WATCH
                    
                    IFONCE (PathNextPoint () = 0)
                            VarCreateSet ("G_DefectorIsReadyToLeave", TRUE);
                            Jump WaitToHyperspaceOut;
                    ENDIFONCE
            ENDWATCH
        ENDSTATE GetToPlayerMothership 


        STATE WaitToHyperspaceOut 
            INIT
            ENDINIT
            WATCH
                    
                    
                    
            ENDWATCH
        ENDSTATE WaitToHyperspaceOut 


        STATE HyperspaceOut2 
            INIT
                    TeamHyperspaceOut ();                           
                    Jump NullState;
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE HyperspaceOut2 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 



ENDFSM Defector










FSM ChaseDefector
    States WaitToHyperspace, HyperspaceOut, WaitToLaunch, Dock, LaunchInts, WaitToAttack, AttackDefector, MoveAttackDefector, AttackNearby, NullState;

    INIT
            TeamHealthSet (200);                                        
            ShipsDamageModifierSet (TEAMSHIPS_ChaseDestroyer, 200);     
            ShipsDamageModifierSet (TEAMSHIPS_ChaseFrigate, 200);       
            ShipsDamageModifierSet (TEAMSHIPS_ChaseSupport, 200);       
            ShipsDamageModifierSet (TEAMSHIPS_ChaseInt, 200);           
            Jump WaitToHyperspace;
    ENDINIT
    WATCH
    ENDWATCH


        STATE WaitToHyperspace 
            INIT
                    IFONCE (TRUE)
                            
                            TimerCreateSetStart ("G_WaitToHyperspaceOut", 3);
                    ENDIFONCE
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            DockInstant (TEAM_ChaseSupport);        
                            Jump WaitToLaunch;
                    ENDIF
                    IF ( (ThisTeamIs (TEAM_ChaseFrigate)) OR (ThisTeamIs (TEAM_ChaseDestroyer)) )
                            FormationBroad ();
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (TimerExpired ("G_WaitToHyperspaceOut"))
                            Jump HyperspaceOut;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitToHyperspace 


        STATE HyperspaceOut 
            INIT
                    TeamHyperspaceOut ();
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (TimerExpired ("G_ChaseDefectorsComeOnIn"))
                            IFONCE (TRUE)
                                    TimerCreateSetStart ("G_DestroyerComeOnIn", 4);
                                    TimerCreateSetStart ("G_FrigateComeOnIn", 7);
                                    TimerCreateSetStart ("G_SupportComeOnIn", 8);
                                    TimerCreateSetStart ("G_IntComeOnIn", 25);
                            ENDIFONCE
                    ENDIF

                    IF (ThisTeamIs (TEAM_ChaseDestroyer))
                            IF (TimerExpired ("G_DestroyerComeOnIn"))
                                    TeamHyperspaceIn (POINT_DestroyerIN);
                                    TimerCreateSetStart ("G_DestroyerIsIn", 15);
                                    Jump WaitToAttack;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseFrigate))
                            IF (TimerExpired ("G_FrigateComeOnIn"))
                                    TeamHyperspaceIn (POINT_FrigateIN);
                                    TimerCreateSetStart ("G_FrigateIsIn", 15);
                                    Jump WaitToAttack;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseSupport))
                            IF (TimerExpired ("G_SupportComeOnIn"))
                                    TeamHyperspaceIn (POINT_SupportIN);
                                    TimerCreateSetStart ("G_SupportFrigateIsIn", 15);
                                    TimerCreateSetStart ("G_TellInterceptorsToLaunch", 45);
                                    Jump WaitToAttack;
                            ENDIF
                    
                    
                    
                    
                    
                    
                    ENDIF
            ENDWATCH
        ENDSTATE HyperspaceOut 


        STATE WaitToAttack 
            INIT
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_ChaseDestroyer))
                            IF (TimerExpired ("G_DestroyerIsIn"))
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseFrigate))
                            IF (TimerExpired ("G_FrigateIsIn"))
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseSupport))
                            IF (TimerExpired ("G_SupportFrigateIsIn"))
                                    Jump AttackDefector;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE WaitToAttack 


        STATE AttackDefector 
            INIT
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            FormationSphere ();
                    ENDIF
                    IF ( (ThisTeamIs (TEAM_ChaseFrigate)) OR (ThisTeamIs (TEAM_ChaseDestroyer)) )
                            FormationBroad ();
                    ENDIF
                    
                    
                    
                    
                    Attack (TEAMSHIPS_Defector);
                    VarCreateSet ("G_SHIPSDefector", ShipsCount (TEAMSHIPS_Defector));
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_ChaseSupport) > 0) )
                                    Jump Dock;
                            ENDIF
                    ENDIF

                    
                    IF ( (ThisTeamIs (TEAM_ChaseDestroyer)) OR (ThisTeamIs (TEAM_ChaseFrigate)) OR (ThisTeamIs (TEAM_ChaseSupport)) )
                            IF (Nearby (SHIPSPOINT_Defector, 5000))
                                    Jump MoveAttackDefector;
                            ENDIF
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            IF (ShipsOrder (TEAMSHIPS_ChaseInt) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseDestroyer))
                            IF (ShipsOrder (TEAMSHIPS_ChaseDestroyer) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseFrigate))
                            IF (ShipsOrder (TEAMSHIPS_ChaseFrigate) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseSupport))
                            IF (ShipsOrder (TEAMSHIPS_ChaseFrigate) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ENDIF

                    
                    IF (UnderAttack (SHIPS_AttackingChaseTeam))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingChaseTeam, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingChaseTeam, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingChaseTeam) > 0)
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE AttackDefector 


        STATE MoveAttackDefector 
            INIT
                    IF ( (ThisTeamIs (TEAM_ChaseFrigate)) OR (ThisTeamIs (TEAM_ChaseDestroyer)) )
                            FormationBroad ();
                    ENDIF
                    MoveAttack (TEAMSHIPS_Defector);
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            IF (ShipsOrder (TEAMSHIPS_ChaseInt) != 2)
                                    Jump MoveAttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseDestroyer))
                            IF (ShipsOrder (TEAMSHIPS_ChaseDestroyer) != 2)
                                    Jump MoveAttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseFrigate))
                            IF (ShipsOrder (TEAMSHIPS_ChaseFrigate) != 2)
                                    Jump MoveAttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseSupport))
                            IF (ShipsOrder (TEAMSHIPS_ChaseFrigate) != 2)
                                    Jump MoveAttackDefector;
                            ENDIF
                    ENDIF


                    
                    IF (UnderAttack (SHIPS_AttackingChaseTeam))
                            ShipsSelectClass (SHIPS_Mothership, SHIPS_AttackingChaseTeam, "CLASS_Mothership");       
                            ShipsRemove (SHIPS_AttackingChaseTeam, SHIPS_Mothership);                                
                            IF (ShipsCount (SHIPS_AttackingChaseTeam) > 0)
                                    Jump AttackNearby;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE MoveAttackDefector 


        STATE AttackNearby 
            INIT
                    ShipsSelectClass (SHIPS_ChaseNearbyFighters, SHIPS_AttackingChaseTeam, "CLASS_Fighter");
                    ShipsSelectClass (SHIPS_ChaseNearbyFrigates, SHIPS_AttackingChaseTeam, "CLASS_Frigate");
                    ShipsSelectClass (SHIPS_ChaseNearbyCorvettes, SHIPS_AttackingChaseTeam, "CLASS_Corvette");
                    ShipsSelectClass (SHIPS_ChaseNearbyDestroyers, SHIPS_AttackingChaseTeam, "CLASS_Destroyer");
                    IF (ThisTeamIs (TEAM_ChaseDestroyer))
                            IF (ShipsCount (SHIPS_ChaseNearbyDestroyers) > 0)           
                                    MoveAttack (SHIPS_ChaseNearbyDestroyers);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyFrigates) > 0)         
                                    MoveAttack (SHIPS_ChaseNearbyFrigates);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyCorvettes) > 0)        
                                    Attack (SHIPS_ChaseNearbyCorvettes);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyFighters) > 0)         
                                    Attack (SHIPS_ChaseNearbyFighters);
                            ELSEIF (ShipsCount (SHIPS_AttackingChaseTeam) > 0)          
                                    Attack (SHIPS_AttackingChaseTeam);
                            ENDIF
                    ELSEIF ( (ThisTeamIs (TEAM_ChaseFrigate)) OR (ThisTeamIs (TEAM_ChaseSupport)) )
                            IF (ShipsCount (SHIPS_ChaseNearbyCorvettes) > 0)            
                                    Attack (SHIPS_ChaseNearbyCorvettes);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyFrigates) > 0)         
                                    MoveAttack (SHIPS_ChaseNearbyFrigates);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyDestroyers) > 0)       
                                    MoveAttack (SHIPS_ChaseNearbyDestroyers);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyFighters) > 0)         
                                    Attack (SHIPS_ChaseNearbyFighters);
                            ELSEIF (ShipsCount (SHIPS_AttackingChaseTeam) > 0)          
                                    Attack (SHIPS_AttackingChaseTeam);
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseInt))
                            IF (ShipsCount (SHIPS_ChaseNearbyFighters) > 0)             
                                    FormationClaw ();
                                    Attack (SHIPS_ChaseNearbyFighters);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyFrigates) > 0)         
                                    FormationClaw ();
                                    Attack (SHIPS_ChaseNearbyFrigates);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyDestroyers) > 0)       
                                    FormationClaw ();
                                    Attack (SHIPS_ChaseNearbyDestroyers);
                            ELSEIF (ShipsCount (SHIPS_ChaseNearbyCorvettes) > 0)        
                                    FormationClaw ();
                                    Attack (SHIPS_ChaseNearbyCorvettes);
                            ELSEIF (ShipsCount (SHIPS_AttackingChaseTeam) > 0)          
                                    FormationClaw ();
                                    Attack (SHIPS_AttackingChaseTeam);
                            ENDIF
                    ENDIF
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            IF ( (TeamFuelLowest () < 25) AND (ShipsCount (TEAMSHIPS_ChaseSupport) > 0) )
                                    Jump Dock;
                            ENDIF
                    ENDIF

                    
                    IF (ThisTeamIs (TEAM_ChaseInt))
                            IF (ShipsOrder (TEAMSHIPS_ChaseInt) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseDestroyer))
                            IF (ShipsOrder (TEAMSHIPS_ChaseDestroyer) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseFrigate))
                            IF (ShipsOrder (TEAMSHIPS_ChaseFrigate) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ELSEIF (ThisTeamIs (TEAM_ChaseSupport))
                            IF (ShipsOrder (TEAMSHIPS_ChaseFrigate) != 2)
                                    Jump AttackDefector;
                            ENDIF
                    ENDIF

                    IF (NOT UnderAttack (SHIPS_AttackingChaseTeam))
                            Jump AttackDefector;
                    ENDIF
            ENDWATCH
        ENDSTATE AttackNearby 


        STATE Dock 
            INIT
                    DockStay (TEAM_ChaseSupport);                        
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (TeamDockedReadyForLaunch ())                
                            Jump LaunchInts;
                    ENDIF
                    IF (ShipsCount (TEAMSHIPS_ChaseSupport) = 0)         
                            Jump AttackDefector;
                    ENDIF
            ENDWATCH
        ENDSTATE Dock 


        STATE WaitToLaunch 
            INIT
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    
                    IF (TimerExpiredDestroy ("G_TellInterceptorsToLaunch"))
                            IF (ThisTeamIs (TEAM_ChaseInt))
                                    Jump LaunchInts;
                            ENDIF
                    ENDIF
            ENDWATCH
        ENDSTATE WaitToLaunch 


        STATE LaunchInts 
            INIT
                    Launch ();
            ENDINIT
            WATCH
                    
                    IF (ShipsCount (THISTEAMSHIPS) = 0)
                            Jump NullState;
                    ENDIF

                    IF (TeamFinishedLaunching ())
                            Jump AttackDefector;
                    ENDIF
            ENDWATCH
        ENDSTATE LaunchInts 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 




ENDFSM ChaseDefector














FSM StrikeTeamDispatch
    States WaitForACT2, BeginSTRInterceptors, BeginSTRBombers, BeginSTRMGs, BeginSTRGWs, BeginSTRCGs, NullState;

    INIT
            VarCreateSet ("TimeBetweenLaunches", 205);
            VarCreateSet ("INTERCEPTORProductionTime", 200);
            VarCreateSet ("BOMBERProductionTime", 200);
            VarCreateSet ("MGProductionTime", 200);
            VarCreateSet ("GWProductionTime", 200);
            VarCreateSet ("CGProductionTime", 200);
            
            Jump WaitForACT2;
    ENDINIT
    WATCH
            IFONCE (VarGet ("G_ACT3HasBegun") = TRUE)
                    Jump NullState;
            ENDIFONCE
    ENDWATCH


        STATE WaitForACT2 
            INIT
            ENDINIT
            WATCH
                    IF ( (VarGet ("G_ACT2HasBegun") = TRUE) AND (VarGet ("G_STRIntScoutREADY") = TRUE) AND (VarGet ("G_STRIntIntREADY") = TRUE) )
                            Jump BeginSTRInterceptors;
                    ENDIF
            ENDWATCH
        ENDSTATE WaitForACT2 


        STATE BeginSTRInterceptors 
            INIT
                    VarCreateSet ("G_STRInterceptorsLAUNCH", TRUE);
                    TimerCreateSetStart ("LaunchNextTeam", (VarGet ("TimeBetweenLaunches") - VarGet ("BOMBERProductionTime")));
            ENDINIT
            WATCH
                    IF ( (TimerExpired ("LaunchNextTeam")) AND (VarGet ("G_STRBomberATREADY") = TRUE) AND (VarGet ("G_STRBomberHCREADY") = TRUE) )
                            TimerDestroy ("LaunchNextTeam");
                            Jump BeginSTRBombers;
                    ENDIF
            ENDWATCH
        ENDSTATE BeginSTRInterceptors 


        STATE BeginSTRBombers 
            INIT
                    VarCreateSet ("G_STRBombersLAUNCH", TRUE);
                    TimerCreateSetStart ("LaunchNextTeam", (VarGet ("TimeBetweenLaunches") - VarGet ("MGProductionTime")));
            ENDINIT
            WATCH
                    IF ( (TimerExpired ("LaunchNextTeam")) AND (VarGet ("G_STRMGMGREADY") = TRUE) AND (VarGet ("G_STRMGSFREADY") = TRUE) )
                            TimerDestroy ("LaunchNextTeam");
                            Jump BeginSTRMGs;
                    ENDIF
            ENDWATCH
        ENDSTATE BeginSTRBombers 


        STATE BeginSTRMGs 
            INIT
                    VarCreateSet ("G_STRMGLAUNCH", TRUE);
                    TimerCreateSetStart ("LaunchNextTeam", (VarGet ("TimeBetweenLaunches") - VarGet ("GWProductionTime")));
            ENDINIT
            WATCH
                    IF ( (TimerExpired ("LaunchNextTeam")) AND (VarGet ("G_STRGWIonREADY") = TRUE) AND (VarGet ("G_STRGWGravREADY") = TRUE) )
                            TimerDestroy ("LaunchNextTeam");
                            Jump BeginSTRGWs;
                    ENDIF
            ENDWATCH
        ENDSTATE BeginSTRMGs 


        STATE BeginSTRGWs 
            INIT
                    VarCreateSet ("G_STRGWLAUNCH", TRUE);
                    TimerCreateSetStart ("LaunchNextTeam", (VarGet ("TimeBetweenLaunches") - VarGet ("CGProductionTime")));
            ENDINIT
            WATCH
                    IF ( (TimerExpired ("LaunchNextTeam")) AND (VarGet ("G_STRCGIonREADY") = TRUE) AND (VarGet ("G_STRCGCloakREADY") = TRUE) )
                            TimerDestroy ("LaunchNextTeam");
                            Jump BeginSTRCGs;
                    ENDIF
            ENDWATCH
        ENDSTATE BeginSTRGWs 


        STATE BeginSTRCGs 
            INIT
                    VarCreateSet ("G_STRCGLAUNCH", TRUE);
                    TimerCreateSetStart ("LaunchNextTeam", (VarGet ("TimeBetweenLaunches") - VarGet ("INTERCEPTORProductionTime")));
            ENDINIT
            WATCH
                    IF ( (TimerExpired ("LaunchNextTeam")) AND (VarGet ("G_STRIntScoutREADY") = TRUE) AND (VarGet ("G_STRIntIntREADY") = TRUE) )
                            TimerDestroy ("LaunchNextTeam");
                            Jump BeginSTRInterceptors;
                    ENDIF
            ENDWATCH
        ENDSTATE BeginSTRCGs 


        STATE NullState 
            INIT
            ENDINIT
            WATCH
            ENDWATCH
        ENDSTATE NullState 


ENDFSM StrikeTeamDispatch







INIT


        
        
        

        FSMCreate (FleetIntel, TEAM_FleetIntel);

        FSMCreate (TestTeam, TEAM_TestTeam);                        
        FSMCreate (StrikeTeamDispatch, TEAM_StrikeTeamDispatch);    

        FSMCreate (GravWells, TEAM_GravwellTeam1);                  
        FSMCreate (GravWells, TEAM_GravwellTeam2);                  
        FSMCreate (GravWells, TEAM_GravwellTeam3);                  
        FSMCreate (GuardGravWells, TEAM_GuardGWTeam1);              
        FSMCreate (GuardGravWells, TEAM_GuardGWTeam2);              
        FSMCreate (GuardGravWells, TEAM_GuardGWTeam3);              
        FSMCreate (GravWellSupport, TEAM_GW1Support);               
        FSMCreate (GravWellSupport, TEAM_GW2Support);               
        FSMCreate (GravWellSupport, TEAM_GW3Support);               

        FSMCreate (AIShips, TEAM_AICarrier);                        
        FSMCreate (AIShips, TEAM_AICollector);                      
        FSMCreate (AIShips, TEAM_AIController);                     

        FSMCreate (Carrier, TEAM_Carrier);                          
        FSMCreate (GuardCarrier, TEAM_GuardCarrierIon);             
        FSMCreate (GuardCarrier, TEAM_GuardCarrierCorv);            
        FSMCreate (GuardCarrier, TEAM_GuardCarrierDef);             

        FSMCreate (Cruiser, TEAM_Cruiser);                          
        FSMCreate (GuardCruiser, TEAM_GuardCruiserDef);             
        FSMCreate (GuardCruiser, TEAM_GuardCruiserCorv);            
        FSMCreate (GuardCruiser, TEAM_GuardCruiserIon);             

        FSMCreate (STRInterceptors, TEAM_STRIntScout);              
        FSMCreate (STRInterceptors, TEAM_STRIntInt);                

        FSMCreate (STRBombers, TEAM_STRBomberAT);                   
        FSMCreate (STRBombers, TEAM_STRBomberHC);                   

        FSMCreate (STRMG, TEAM_STRMGMG);                            
        FSMCreate (STRMG, TEAM_STRMGSF);                            

        FSMCreate (STRGW, TEAM_STRGWIon);                           
        FSMCreate (STRGW, TEAM_STRGWGrav);                          

        FSMCreate (STRCG, TEAM_STRCGIon);                           
        FSMCreate (STRCG, TEAM_STRCGCloak);                         

        FSMCreate (Defector, TEAM_Defector);                        

        FSMCreate (ChaseDefector, TEAM_ChaseDestroyer);             
        FSMCreate (ChaseDefector, TEAM_ChaseFrigate);               
        FSMCreate (ChaseDefector, TEAM_ChaseSupport);               
        FSMCreate (ChaseDefector, TEAM_ChaseInt);                   


        

        



        
        
        

        
        BuildControl(TRUE);                                         

        EnableAllAIFeatures ();
        DisableAIFeature (1,  1);                                   
        DisableAIFeature (2, 1);                                    
        DisableAIFeature (10, 1);                                   
        DisableAIFeature (20, 1);                                   
        DisableAIFeature (40, 1);                                   
        DisableAIFeature (100, 1);                                  
        DisableAIFeature (200, 1);                                  


        



        
        SaveLevel (12, LSTRING_Savegame);

ENDINIT

WATCH

        
        
        

        IFONCE (TRUE)
                TimerCreateSetStart ("LocationCardTimer", 1);
        ENDIFONCE

        IF (TimerExpiredDestroy ("LocationCardTimer"))
                LocationCard (5000, LSTRING_LocationCard);
        ENDIF

        


        
        
        

        



        
        
        

        




        
        
        


        



        
        
        




        

        
        IFONCE ( (ShipsCount (TEAMSHIPS_GuardGWTeam2) = 0) OR
                 (ShipsCount (TEAMSHIPS_GuardGWTeam3) = 0) )
                VarCreateSet ("G_ACT2HasBegun", TRUE);
                
        ENDIFONCE

        
        IFONCE (TRUE)
                VarCreateSet ("G_TOTALCarrierAttackersACT1", 0);
        ENDIFONCE

        ShipsSelectClass (SHIPS_CarrierFightersACT1, SHIPS_CarrierAttackedACT1, "CLASS_Fighter");
        ShipsSelectClass (SHIPS_CarrierCorvettesACT1, SHIPS_CarrierAttackedACT1, "CLASS_Corvette");
        ShipsSelectClass (SHIPS_CarrierFrigatesACT1, SHIPS_CarrierAttackedACT1, "CLASS_Frigate");
        ShipsSelectClass (SHIPS_CarrierDestroyersACT1, SHIPS_CarrierAttackedACT1, "CLASS_Destroyer");
        ShipsSelectClass (SHIPS_CarrierCarriersACT1, SHIPS_CarrierAttackedACT1, "CLASS_Carrier");

        VarSet ("G_TOTALCarrierAttackersACT1", 62*(ShipsCount (SHIPS_CarrierFightersACT1))              
                                              +222*(ShipsCount (SHIPS_CarrierCorvettesACT1))
                                              +612*(ShipsCount (SHIPS_CarrierFrigatesACT1))
                                              +1425*(ShipsCount (SHIPS_CarrierDestroyersACT1))
                                              +2000*(ShipsCount (SHIPS_CarrierCarriersACT1)));

        IFONCE ( (VarGet ("G_TOTALCarrierAttackersACT1") > 1000) AND (VarGet ("G_ACT2HasBegun") = FALSE) )
                VarCreateSet ("G_ACT2HasBegun", TRUE);
        ENDIFONCE


        
        IFONCE ( (VarGet ("G_CarrierLowOnHealth") = TRUE) AND (VarGet ("G_ACT2HasBegun") = FALSE) )
                VarCreateSet ("G_ACT2HasBegun", TRUE);
        ENDIFONCE



        
        
        
        
        
        
        
        
        
        
        
        
        
        
        IFONCE (ShipsCount (TEAMSHIPS_Cruiser) = 0)
                VarCreateSet ("G_ACT3HasBegun", TRUE);
        ENDIFONCE



        










































        




        
        
        


        
        IFONCE (TRUE)
                TimerCreateSetStart ("G_FCHyperspaceSuccessful", 5);
        ENDIFONCE

        
        IFONCE (TRUE)
                TimerCreateSetStart ("G_UnderAttackTimer", 30);
        ENDIFONCE

        
        IFONCE ( (VarGet ("G_UnderAttackHasPlayed") = TRUE) AND ((NOT TechGet ("MissileWeapons")) AND (NOT TechGetResearch ("MissileWeapons"))) )
                TimerCreateSetStart ("G_PlayMissileTech", 10);
        ENDIFONCE


        
        IFONCE (TRUE)
                TimerCreateSetStart ("G_TechnologyTimer", Random (180, 250));
        ENDIFONCE


        




        
        
        

        
        IFONCE (VarGet ("G_FleetIntelIntroHasPlayed") = TRUE)
                ObjectiveCreate ("DestroyField", LSTRING_FICaughtInFieldTASKBAR, LSTRING_FICaughtInFieldTASKBAR);
                VarCreateSet ("G_DestroyFieldObjectiveCreated", TRUE);
        ENDIFONCE

        
        IFONCE ( (ShipsCount (TEAMSHIPS_GravwellTeam1) = 0) AND (ShipsCount (TEAMSHIPS_GravwellTeam2) = 0) AND (ShipsCount (TEAMSHIPS_GravwellTeam3) = 0) )
                ObjectiveSet ("DestroyField", TRUE);
        ENDIFONCE

        
        IFONCE (VarGet ("G_UnderAttackHasPlayed") = TRUE)
                ObjectiveCreate ("ProtectFleet", LSTRING_FIUnderAttackTASKBAR, LSTRING_FIUnderAttackTASKBAR);
        ENDIFONCE

        
        IFONCE (VarGet ("G_ProtectDefectorHasPlayed") = TRUE)
                ObjectiveSet ("ProtectFleet", TRUE);
                ObjectiveCreate ("ProtectDefector", LSTRING_FIHelpDefectorTASKBAR, LSTRING_FIHelpDefectorTASKBAR);
        ENDIFONCE

        
        IFONCE ( (TimerExpired ("G_FocusOnDefectorNow")) AND (ShipsCount (TEAMSHIPS_Defector) = 0) )
                
                MissionFailed ();
        ENDIFONCE

        
        IFONCE ( (ShipsCount (TEAMSHIPS_ChaseDestroyer) = 0) AND
                 (ShipsCount (TEAMSHIPS_ChaseFrigate) = 0) AND
                 (ShipsCount (TEAMSHIPS_ChaseSupport) = 0) ) 
                 
                ObjectiveSet ("ProtectDefector", TRUE);
                MusicStop (4);
                PingRemove ("DefectorPing");
        ENDIFONCE




        
        IFONCE ( (ObjectiveGet ("DestroyField") = TRUE) AND
                 (ObjectiveGet ("ProtectFleet") = TRUE) AND
                 (ObjectiveGet ("ProtectDefector") = TRUE) AND
                 (VarGet ("G_DefectorIsReadyToLeave") = TRUE) )
                TimerCreateSetStart ("G_AllObjectivesComplete", 4);
        ENDIFONCE


        
        IFONCE (VarGet ("G_DefectorIsOnBoard") = TRUE)
                ObjectiveCreate ("Hyperspace", LSTRING_Hyperspace, LSTRING_Hyperspace);
        ENDIFONCE

        
        
        
        

        










        
        
        


        
        
        IFONCE (TechGet ("MassDrive10Kt"))
                TechSetResearch ("Chassis2");
        ENDIFONCE

        
        IF ((TechGet ("Chassis2")) AND (VarGet ("SetMediumGuns") = FALSE))
                TechSetResearch ("MediumGuns");
                VarCreateSet ("SetMediumGuns", TRUE);
        ENDIF

        
        
        IFONCE (TechGet ("Chassis1"))
                TechSetResearch ("MassDrive10Kt");
        ENDIFONCE

        


ENDWATCH
